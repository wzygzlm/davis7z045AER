-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity eventStreamToConstEncntFrameStream is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    frameStream_TREADY : IN STD_LOGIC;
    xStream_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    xStream_V_V_TVALID : IN STD_LOGIC;
    xStream_V_V_TREADY : OUT STD_LOGIC;
    yStream_V_V_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    yStream_V_V_TVALID : IN STD_LOGIC;
    yStream_V_V_TREADY : OUT STD_LOGIC;
    count_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    count_V_ap_vld : OUT STD_LOGIC;
    vgaEn_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    vgaEn_V_ap_vld : OUT STD_LOGIC;
    vCnt_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    vCnt_V_ap_vld : OUT STD_LOGIC;
    hCnt_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    hCnt_V_ap_vld : OUT STD_LOGIC;
    regX_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    regX_V_ap_vld : OUT STD_LOGIC;
    regY_V : OUT STD_LOGIC_VECTOR (15 downto 0);
    regY_V_ap_vld : OUT STD_LOGIC;
    skipFlgOutput_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    skipFlgOutput_V_ap_vld : OUT STD_LOGIC;
    frameStream_TDATA : OUT STD_LOGIC_VECTOR (23 downto 0);
    frameStream_TVALID : OUT STD_LOGIC;
    frameStream_TKEEP : OUT STD_LOGIC_VECTOR (2 downto 0);
    frameStream_TSTRB : OUT STD_LOGIC_VECTOR (2 downto 0);
    frameStream_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    frameStream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    frameStream_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    frameStream_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_ctrl_AWVALID : IN STD_LOGIC;
    s_axi_ctrl_AWREADY : OUT STD_LOGIC;
    s_axi_ctrl_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_WVALID : IN STD_LOGIC;
    s_axi_ctrl_WREADY : OUT STD_LOGIC;
    s_axi_ctrl_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_ctrl_ARVALID : IN STD_LOGIC;
    s_axi_ctrl_ARREADY : OUT STD_LOGIC;
    s_axi_ctrl_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_ctrl_RVALID : OUT STD_LOGIC;
    s_axi_ctrl_RREADY : IN STD_LOGIC;
    s_axi_ctrl_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_ctrl_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_ctrl_BVALID : OUT STD_LOGIC;
    s_axi_ctrl_BREADY : IN STD_LOGIC;
    s_axi_ctrl_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of eventStreamToConstEncntFrameStream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "eventStreamToConstEncntFrameStream,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z045ffg900-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=10.650750,HLS_SYN_LAT=5,HLS_SYN_TPT=1,HLS_SYN_MEM=228,HLS_SYN_DSP=1,HLS_SYN_FF=1372,HLS_SYN_LUT=1344}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv12_103 : STD_LOGIC_VECTOR (11 downto 0) := "000100000011";
    constant ap_const_lv12_159 : STD_LOGIC_VECTOR (11 downto 0) := "000101011001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_320 : STD_LOGIC_VECTOR (11 downto 0) := "001100100000";
    constant ap_const_lv12_258 : STD_LOGIC_VECTOR (11 downto 0) := "001001011000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_66 : STD_LOGIC_VECTOR (7 downto 0) := "01100110";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv12_31F : STD_LOGIC_VECTOR (11 downto 0) := "001100011111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_12B : STD_LOGIC_VECTOR (15 downto 0) := "0000000100101011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_C7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000011000111";
    constant ap_const_lv34_186A0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000011000011010100000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal frameStream_V_data_V_1_ack_in : STD_LOGIC;
    signal vgaOutputEn_load_reg_2387 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_io : BOOLEAN;
    signal frameStream_V_keep_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_strb_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_user_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_last_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_id_V_1_ack_in : STD_LOGIC;
    signal frameStream_V_dest_V_1_ack_in : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal vgaOutputEn_load_reg_2387_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal configRegs_V : STD_LOGIC_VECTOR (15 downto 0);
    signal configRegs_V_0_data_reg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal configRegs_V_0_vld_reg : STD_LOGIC := '0';
    signal configRegs_V_0_ack_out : STD_LOGIC;
    signal ctrl_V : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl_V_0_data_reg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ctrl_V_0_vld_reg : STD_LOGIC := '0';
    signal ctrl_V_0_ack_out : STD_LOGIC;
    signal currentEvCntReg_V : STD_LOGIC_VECTOR (31 downto 0);
    signal currentEvCntReg_V_ap_vld : STD_LOGIC;
    signal frameStream_V_data_V_1_data_out : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_data_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_data_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_data_V_1_payload_A : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_payload_B : STD_LOGIC_VECTOR (23 downto 0);
    signal frameStream_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_data_V_1_sel : STD_LOGIC;
    signal frameStream_V_data_V_1_load_A : STD_LOGIC;
    signal frameStream_V_data_V_1_load_B : STD_LOGIC;
    signal frameStream_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_keep_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal frameStream_V_keep_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_keep_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_keep_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_keep_V_1_sel : STD_LOGIC;
    signal frameStream_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_strb_V_1_data_out : STD_LOGIC_VECTOR (2 downto 0);
    signal frameStream_V_strb_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_strb_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_strb_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_strb_V_1_sel : STD_LOGIC;
    signal frameStream_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_user_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_user_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_user_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal frameStream_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_user_V_1_sel : STD_LOGIC;
    signal frameStream_V_user_V_1_load_A : STD_LOGIC;
    signal frameStream_V_user_V_1_load_B : STD_LOGIC;
    signal frameStream_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_last_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_last_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal frameStream_V_last_V_1_sel : STD_LOGIC;
    signal frameStream_V_last_V_1_load_A : STD_LOGIC;
    signal frameStream_V_last_V_1_load_B : STD_LOGIC;
    signal frameStream_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal frameStream_V_id_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_id_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_id_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_id_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_id_V_1_sel : STD_LOGIC;
    signal frameStream_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal frameStream_V_dest_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal frameStream_V_dest_V_1_vld_in : STD_LOGIC;
    signal frameStream_V_dest_V_1_vld_out : STD_LOGIC;
    signal frameStream_V_dest_V_1_ack_out : STD_LOGIC;
    signal frameStream_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal frameStream_V_dest_V_1_sel : STD_LOGIC;
    signal frameStream_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal sliceDurationMs_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001010";
    signal currentStoreSliceIdx : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal vCntReg_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal hCntReg_V : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal glDVSSlice_V_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_ce0 : STD_LOGIC;
    signal glDVSSlice_V_0_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_0_ce1 : STD_LOGIC;
    signal glDVSSlice_V_0_we1 : STD_LOGIC;
    signal glDVSSlice_V_0_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_ce0 : STD_LOGIC;
    signal glDVSSlice_V_1_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal glDVSSlice_V_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_ce1 : STD_LOGIC;
    signal glDVSSlice_V_1_we1 : STD_LOGIC;
    signal glDVSSlice_V_1_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal vgaOutputEn : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cntReg_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal startX_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal startY_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal evCntReg_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal frameStream_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_0683_1_reg_381 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0683_1_reg_381_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal hCntReg_V_load_3_reg_436 : STD_LOGIC_VECTOR (11 downto 0);
    signal hCntReg_V_load_3_reg_436_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_3_reg_449 : STD_LOGIC_VECTOR (11 downto 0);
    signal vCntReg_V_load_3_reg_449_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal val_assign_2_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_fu_581_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_reg_2301 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_reg_2301_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_2305 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2305_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2305_pp0_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2305_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_V_reg_2305_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_n_1_fu_589_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_1_reg_2311 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_n_1_reg_2311_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ctrl_V_read_reg_2321 : STD_LOGIC_VECTOR (31 downto 0);
    signal ctrl_V_read_reg_2321_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_597_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_2327 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_2327_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_2295_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal r_V_reg_2331 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_2_fu_624_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal currentStoreSliceIdx_1_load_fu_632_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal currentStoreSliceIdx_1_reg_2341 : STD_LOGIC_VECTOR (0 downto 0);
    signal glDVSSlice_V_0_addr_1_reg_2345 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_addr_reg_2351 : STD_LOGIC_VECTOR (11 downto 0);
    signal hCntReg_V_load_reg_2357 : STD_LOGIC_VECTOR (11 downto 0);
    signal glDVSSlice_V_1_addr_1_reg_2365 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_2371 : STD_LOGIC_VECTOR (0 downto 0);
    signal glDVSSlice_V_0_addr_reg_2376 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_reg_2382 : STD_LOGIC_VECTOR (0 downto 0);
    signal vgaOutputEn_load_load_fu_734_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_2391 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_2399 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_2399_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_825_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_reg_2403 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_76_reg_2403_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_last_V_fu_2177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rgbStreamData_data_V_fu_2183_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_user_V_fu_2192_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_77_fu_2204_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_val_assign_2_phi_fu_522_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_p_0683_s_reg_369 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0683_s_reg_369 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0683_s_reg_369 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0683_1_reg_381 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0683_1_reg_381 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0683_1_reg_381 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0683_1_reg_381 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_vCntReg_V_flag_phi_fu_396_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_393 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_hCntReg_V_flag_phi_fu_411_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_408 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_flag_phi_fu_426_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_423 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_66_fu_751_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter3_hCntReg_V_load_3_reg_436 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_vCntReg_V_load_3_phi_fu_452_p6 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_reg_pp0_iter3_vCntReg_V_load_3_reg_449 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_tmp_1_fu_777_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_phi_mux_val_assign_1_phi_fu_464_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_val_assign_1_reg_461 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_tmp_s_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_flag_1_phi_fu_477_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_474 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_vgaOutputEn_new_1_phi_fu_489_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_486 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_t_V_2_phi_fu_500_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_t_V_2_reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_ctrl_V_buf_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_ctrl_V_buf_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_ctrl_V_buf_reg_507 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_val_assign_2_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_val_assign_2_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_val_assign_2_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_val_assign_2_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_val_assign_2_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_p_0641_2_phi_fu_534_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_fu_1402_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0641_2_reg_531 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0641_1_fu_2051_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_val_assign_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_val_assign_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_val_assign_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_val_assign_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_val_assign_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_val_assign_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_evCntReg_V_loc_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_evCntReg_V_loc_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_evCntReg_V_loc_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter3_evCntReg_V_loc_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter4_evCntReg_V_loc_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter5_evCntReg_V_loc_reg_553 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_cast_fu_669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_96_cast_fu_706_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_93_cast_fu_729_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_s_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_tmp_s_fu_2232_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge1_fu_2262_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_reg_ioackin_count_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_vgaEn_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_vCnt_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_hCnt_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_regX_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_regY_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_skipFlgOutput_V_dummy_ack : STD_LOGIC := '0';
    signal ap_reg_ioackin_currentEvCntReg_V_dummy_ack : STD_LOGIC := '0';
    signal tmp_125_fu_1203_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_100_fu_2130_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_143_fu_1481_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_50_fu_1852_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_8_fu_615_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_fu_645_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_642_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_31_cast_fu_655_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_663_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_562_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_29_cast_fu_688_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_95_cast_fu_692_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_96_fu_700_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_19_cast_fu_711_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_92_cast_fu_715_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_54_fu_723_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_64_fu_739_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_68_fu_764_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_70_cast_fu_798_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_101_fu_843_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_52_fu_847_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_1_fu_855_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_867_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_1_fu_875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_887_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_2_fu_895_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_907_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_3_fu_915_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_927_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_4_fu_935_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_947_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_5_fu_955_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_967_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_6_fu_975_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_987_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_10_7_fu_995_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_fu_999_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_107_fu_959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_106_fu_939_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_919_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_fu_899_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_103_fu_879_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_859_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_53_7_fu_1007_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_1027_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmpPixVal_V_fu_1033_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_110_fu_1041_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_112_fu_1059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_1049_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_1_fu_1067_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_114_fu_1081_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_113_fu_1071_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_2_fu_1089_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_116_fu_1103_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_115_fu_1093_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_3_fu_1111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_118_fu_1125_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_117_fu_1115_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_4_fu_1133_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_120_fu_1147_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_119_fu_1137_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_5_fu_1155_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_122_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_fu_1159_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_6_fu_1177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_124_fu_1191_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_123_fu_1181_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_11_7_fu_1199_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_127_fu_1219_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_83_fu_1222_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_3_fu_1230_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_1242_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_1_fu_1250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_1262_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_2_fu_1270_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_1282_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_3_fu_1290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_1302_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_4_fu_1310_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_1322_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_5_fu_1330_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_1342_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_6_fu_1350_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_90_fu_1362_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_14_7_fu_1370_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_135_fu_1374_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_134_fu_1354_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_1334_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_132_fu_1314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_131_fu_1294_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_130_fu_1274_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_1254_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_128_fu_1234_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_61_7_fu_1382_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_136_fu_1411_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_137_fu_1421_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_138_fu_1431_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_139_fu_1441_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_140_fu_1451_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_141_fu_1461_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_142_fu_1471_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_7_fu_1492_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_1496_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_s_fu_1504_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1516_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_1_fu_1524_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1536_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_2_fu_1544_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1556_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_3_fu_1564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1576_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_4_fu_1584_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1596_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_5_fu_1604_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1616_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_6_fu_1624_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1636_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_18_7_fu_1644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_1648_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_1628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1608_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1588_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1568_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1548_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1528_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_69_7_fu_1656_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_1676_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmpPixVal_V_2_fu_1682_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_1690_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_8_fu_1694_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1708_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1698_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_1_fu_1716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1730_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1720_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_2_fu_1738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_1752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_1742_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_3_fu_1760_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_1774_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1764_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_4_fu_1782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_41_fu_1796_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_1786_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_5_fu_1804_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_1818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1808_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_6_fu_1826_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_1840_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1830_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Repl2_8_7_fu_1848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_55_fu_1868_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_30_fu_1871_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_2_fu_1879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_1891_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_1_fu_1899_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1911_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_2_fu_1919_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1931_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_3_fu_1939_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_1951_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_4_fu_1959_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_1971_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_5_fu_1979_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_1991_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_6_fu_1999_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_2011_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal index_assign_22_7_fu_2019_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_2023_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_2003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1983_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1963_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1943_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1923_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1903_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1883_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_1863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_77_7_fu_2031_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_92_fu_2060_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_93_fu_2070_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_94_fu_2080_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_95_fu_2090_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_97_fu_2100_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_98_fu_2110_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_99_fu_2120_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_145_fu_2149_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_144_fu_2141_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sf_fu_2161_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal st_fu_2153_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal pixVal_V_fu_2169_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_72_fu_2220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_2226_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_74_fu_2250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_2256_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_2295_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_2295_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal r_V_fu_2295_p00 : STD_LOGIC_VECTOR (33 downto 0);
    signal ap_condition_102 : BOOLEAN;
    signal ap_condition_778 : BOOLEAN;

    component eventStreamToConsdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (33 downto 0) );
    end component;


    component eventStreamToConsbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component eventStreamToConstEncntFrameStream_ctrl_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        currentEvCntReg_V : IN STD_LOGIC_VECTOR (31 downto 0);
        currentEvCntReg_V_ap_vld : IN STD_LOGIC;
        configRegs_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        ctrl_V : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    glDVSSlice_V_0_U : component eventStreamToConsbkb
    generic map (
        DataWidth => 512,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => glDVSSlice_V_0_address0,
        ce0 => glDVSSlice_V_0_ce0,
        q0 => glDVSSlice_V_0_q0,
        address1 => glDVSSlice_V_0_address1,
        ce1 => glDVSSlice_V_0_ce1,
        we1 => glDVSSlice_V_0_we1,
        d1 => glDVSSlice_V_0_d1);

    glDVSSlice_V_1_U : component eventStreamToConsbkb
    generic map (
        DataWidth => 512,
        AddressRange => 4096,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => glDVSSlice_V_1_address0,
        ce0 => glDVSSlice_V_1_ce0,
        q0 => glDVSSlice_V_1_q0,
        address1 => glDVSSlice_V_1_address1,
        ce1 => glDVSSlice_V_1_ce1,
        we1 => glDVSSlice_V_1_we1,
        d1 => glDVSSlice_V_1_d1);

    eventStreamToConstEncntFrameStream_ctrl_s_axi_U : component eventStreamToConstEncntFrameStream_ctrl_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_ctrl_AWVALID,
        AWREADY => s_axi_ctrl_AWREADY,
        AWADDR => s_axi_ctrl_AWADDR,
        WVALID => s_axi_ctrl_WVALID,
        WREADY => s_axi_ctrl_WREADY,
        WDATA => s_axi_ctrl_WDATA,
        WSTRB => s_axi_ctrl_WSTRB,
        ARVALID => s_axi_ctrl_ARVALID,
        ARREADY => s_axi_ctrl_ARREADY,
        ARADDR => s_axi_ctrl_ARADDR,
        RVALID => s_axi_ctrl_RVALID,
        RREADY => s_axi_ctrl_RREADY,
        RDATA => s_axi_ctrl_RDATA,
        RRESP => s_axi_ctrl_RRESP,
        BVALID => s_axi_ctrl_BVALID,
        BREADY => s_axi_ctrl_BREADY,
        BRESP => s_axi_ctrl_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        currentEvCntReg_V => currentEvCntReg_V,
        currentEvCntReg_V_ap_vld => currentEvCntReg_V_ap_vld,
        configRegs_V => configRegs_V,
        ctrl_V => ctrl_V);

    eventStreamToConsdEe_U1 : component eventStreamToConsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 18,
        dout_WIDTH => 34)
    port map (
        din0 => r_V_fu_2295_p0,
        din1 => r_V_fu_2295_p1,
        dout => r_V_fu_2295_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_count_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_count_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_currentEvCntReg_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_currentEvCntReg_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_currentEvCntReg_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_currentEvCntReg_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_hCnt_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_hCnt_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_regX_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_regX_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_regY_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_regY_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_skipFlgOutput_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_skipFlgOutput_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_skipFlgOutput_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_skipFlgOutput_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_vCnt_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_vCnt_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_vgaEn_V_dummy_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_0;
            else
                if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_const_logic_1))) then 
                        ap_reg_ioackin_vgaEn_V_dummy_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_data_V_1_sel_rd <= not(frameStream_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_data_V_1_ack_in = ap_const_logic_1) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_data_V_1_sel_wr <= not(frameStream_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_state = ap_const_lv2_2)) or ((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_state = ap_const_lv2_1)) or ((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_data_V_1_vld_in = ap_const_logic_0) and (frameStream_V_data_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_data_V_1_ack_out = ap_const_logic_0) and (frameStream_V_data_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_data_V_1_state = ap_const_lv2_3)) or ((frameStream_V_data_V_1_ack_out = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_1)) or ((frameStream_V_data_V_1_vld_in = ap_const_logic_1) and (frameStream_V_data_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_dest_V_1_sel_rd <= not(frameStream_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_state = ap_const_lv2_2)) or ((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_state = ap_const_lv2_1)) or ((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_vld_in = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_dest_V_1_vld_in = ap_const_logic_0) and (frameStream_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_dest_V_1_ack_out = ap_const_logic_0) and (frameStream_V_dest_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_dest_V_1_state = ap_const_lv2_3)) or ((frameStream_V_dest_V_1_ack_out = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_1)) or ((frameStream_V_dest_V_1_vld_in = ap_const_logic_1) and (frameStream_V_dest_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_id_V_1_sel_rd <= not(frameStream_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_state = ap_const_lv2_2)) or ((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_state = ap_const_lv2_1)) or ((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_vld_in = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_id_V_1_vld_in = ap_const_logic_0) and (frameStream_V_id_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_id_V_1_ack_out = ap_const_logic_0) and (frameStream_V_id_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_id_V_1_state = ap_const_lv2_3)) or ((frameStream_V_id_V_1_ack_out = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_1)) or ((frameStream_V_id_V_1_vld_in = ap_const_logic_1) and (frameStream_V_id_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_keep_V_1_sel_rd <= not(frameStream_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_state = ap_const_lv2_2)) or ((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_state = ap_const_lv2_1)) or ((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_vld_in = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_keep_V_1_vld_in = ap_const_logic_0) and (frameStream_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_keep_V_1_ack_out = ap_const_logic_0) and (frameStream_V_keep_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_keep_V_1_state = ap_const_lv2_3)) or ((frameStream_V_keep_V_1_ack_out = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_1)) or ((frameStream_V_keep_V_1_vld_in = ap_const_logic_1) and (frameStream_V_keep_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_last_V_1_sel_rd <= not(frameStream_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_last_V_1_ack_in = ap_const_logic_1) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_last_V_1_sel_wr <= not(frameStream_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_state = ap_const_lv2_2)) or ((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_state = ap_const_lv2_1)) or ((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_last_V_1_vld_in = ap_const_logic_0) and (frameStream_V_last_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_last_V_1_ack_out = ap_const_logic_0) and (frameStream_V_last_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_last_V_1_state = ap_const_lv2_3)) or ((frameStream_V_last_V_1_ack_out = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_1)) or ((frameStream_V_last_V_1_vld_in = ap_const_logic_1) and (frameStream_V_last_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_strb_V_1_sel_rd <= not(frameStream_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_state = ap_const_lv2_2)) or ((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_state = ap_const_lv2_1)) or ((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_vld_in = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_strb_V_1_vld_in = ap_const_logic_0) and (frameStream_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_strb_V_1_ack_out = ap_const_logic_0) and (frameStream_V_strb_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_strb_V_1_state = ap_const_lv2_3)) or ((frameStream_V_strb_V_1_ack_out = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_1)) or ((frameStream_V_strb_V_1_vld_in = ap_const_logic_1) and (frameStream_V_strb_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        frameStream_V_user_V_1_sel_rd <= not(frameStream_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((frameStream_V_user_V_1_ack_in = ap_const_logic_1) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        frameStream_V_user_V_1_sel_wr <= not(frameStream_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    frameStream_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                frameStream_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_state = ap_const_lv2_2)) or ((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_state = ap_const_lv2_1)) or ((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_3)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((frameStream_V_user_V_1_vld_in = ap_const_logic_0) and (frameStream_V_user_V_1_ack_out = ap_const_logic_1))) and not(((frameStream_V_user_V_1_ack_out = ap_const_logic_0) and (frameStream_V_user_V_1_vld_in = ap_const_logic_1))) and (frameStream_V_user_V_1_state = ap_const_lv2_3)) or ((frameStream_V_user_V_1_ack_out = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_1)) or ((frameStream_V_user_V_1_vld_in = ap_const_logic_1) and (frameStream_V_user_V_1_state = ap_const_lv2_2)))) then 
                    frameStream_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    frameStream_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_0683_1_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_102)) then
                if (((empty_n_1_fu_589_p1 = ap_const_lv1_1) and (empty_n_fu_581_p1 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_p_0683_1_reg_381 <= yStream_V_V_TDATA;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_0683_1_reg_381 <= ap_phi_reg_pp0_iter0_p_0683_1_reg_381;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_p_0683_s_reg_369_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_102)) then
                if (((empty_n_fu_581_p1 = ap_const_lv1_1) and (empty_n_1_fu_589_p1 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_0683_s_reg_369 <= yStream_V_V_TDATA;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_0683_s_reg_369 <= ap_phi_reg_pp0_iter0_p_0683_s_reg_369;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_val_assign_2_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_102)) then
                if (((empty_n_1_fu_589_p1 = ap_const_lv1_1) and (empty_n_fu_581_p1 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_val_assign_2_reg_516 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_val_assign_2_reg_516 <= ap_phi_reg_pp0_iter0_val_assign_2_reg_516;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_778)) then
                if ((tmp_3_fu_597_p1 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_507 <= ctrl_V_0_data_reg;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_507 <= ap_phi_reg_pp0_iter1_ctrl_V_buf_reg_507;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_p_0683_1_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_n_1_reg_2311_pp0_iter1_reg = ap_const_lv1_0) or (empty_n_reg_2301_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_p_0683_1_reg_381 <= ap_phi_reg_pp0_iter2_p_0683_s_reg_369;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_p_0683_1_reg_381 <= ap_phi_reg_pp0_iter2_p_0683_1_reg_381;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_val_assign_2_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_n_1_reg_2311_pp0_iter1_reg = ap_const_lv1_0) or (empty_n_reg_2301_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_val_assign_2_reg_516 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_val_assign_2_reg_516 <= ap_phi_reg_pp0_iter2_val_assign_2_reg_516;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_ctrl_V_buf_reg_507_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if ((tmp_3_reg_2327_pp0_iter2_reg = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter4_ctrl_V_buf_reg_507 <= tmp_2_fu_624_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_ctrl_V_buf_reg_507 <= ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_507;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter4_val_assign_reg_540_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if ((tmp_71_fu_802_p2 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter4_val_assign_reg_540 <= ap_phi_mux_val_assign_1_phi_fu_464_p6;
                elsif ((tmp_71_fu_802_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter4_val_assign_reg_540 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter4_val_assign_reg_540 <= ap_phi_reg_pp0_iter3_val_assign_reg_540;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter5_evCntReg_V_loc_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                if ((ap_phi_mux_val_assign_2_phi_fu_522_p4 = ap_const_lv1_0)) then 
                    ap_phi_reg_pp0_iter5_evCntReg_V_loc_reg_553 <= tmp_77_fu_2204_p2;
                elsif ((ap_phi_mux_val_assign_2_phi_fu_522_p4 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter5_evCntReg_V_loc_reg_553 <= evCntReg_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter5_evCntReg_V_loc_reg_553 <= ap_phi_reg_pp0_iter4_evCntReg_V_loc_reg_553;
                end if;
            end if; 
        end if;
    end process;

    configRegs_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    ctrl_V_0_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    hCntReg_V_load_3_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                if (((tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1))) then 
                    hCntReg_V_load_3_reg_436 <= ap_const_lv12_0;
                elsif ((vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0)) then 
                    hCntReg_V_load_3_reg_436 <= hCntReg_V;
                elsif (((vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0))) then 
                    hCntReg_V_load_3_reg_436 <= tmp_66_fu_751_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    hCntReg_V_load_3_reg_436 <= ap_phi_reg_pp0_iter3_hCntReg_V_load_3_reg_436;
                end if;
            end if; 
        end if;
    end process;

    vCntReg_V_load_3_reg_449_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                vCntReg_V_load_3_reg_449 <= p_tmp_1_fu_777_p3;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0)))) then 
                vCntReg_V_load_3_reg_449 <= vCntReg_V;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                vCntReg_V_load_3_reg_449 <= ap_phi_reg_pp0_iter3_vCntReg_V_load_3_reg_449;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_ctrl_V_buf_reg_507 <= ap_phi_reg_pp0_iter0_ctrl_V_buf_reg_507;
                ap_phi_reg_pp0_iter1_evCntReg_V_loc_reg_553 <= ap_phi_reg_pp0_iter0_evCntReg_V_loc_reg_553;
                ap_phi_reg_pp0_iter1_val_assign_reg_540 <= ap_phi_reg_pp0_iter0_val_assign_reg_540;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_evCntReg_V_loc_reg_553 <= ap_phi_reg_pp0_iter1_evCntReg_V_loc_reg_553;
                ap_phi_reg_pp0_iter2_p_0683_1_reg_381 <= ap_phi_reg_pp0_iter1_p_0683_1_reg_381;
                ap_phi_reg_pp0_iter2_p_0683_s_reg_369 <= ap_phi_reg_pp0_iter1_p_0683_s_reg_369;
                ap_phi_reg_pp0_iter2_val_assign_2_reg_516 <= ap_phi_reg_pp0_iter1_val_assign_2_reg_516;
                ap_phi_reg_pp0_iter2_val_assign_reg_540 <= ap_phi_reg_pp0_iter1_val_assign_reg_540;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_ctrl_V_buf_reg_507 <= ap_phi_reg_pp0_iter2_ctrl_V_buf_reg_507;
                ap_phi_reg_pp0_iter3_evCntReg_V_loc_reg_553 <= ap_phi_reg_pp0_iter2_evCntReg_V_loc_reg_553;
                ap_phi_reg_pp0_iter3_val_assign_reg_540 <= ap_phi_reg_pp0_iter2_val_assign_reg_540;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_evCntReg_V_loc_reg_553 <= ap_phi_reg_pp0_iter3_evCntReg_V_loc_reg_553;
                ap_phi_reg_pp0_iter4_val_assign_2_reg_516 <= ap_phi_reg_pp0_iter3_val_assign_2_reg_516;
                cntReg_V <= tmp_76_fu_825_p2;
                p_0683_1_reg_381 <= ap_phi_reg_pp0_iter3_p_0683_1_reg_381;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_val_assign_reg_540 <= ap_phi_reg_pp0_iter4_val_assign_reg_540;
                val_assign_2_reg_516 <= ap_phi_reg_pp0_iter4_val_assign_2_reg_516;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (configRegs_V_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (configRegs_V_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (configRegs_V_0_vld_reg = ap_const_logic_1)))) then
                configRegs_V_0_data_reg <= configRegs_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ctrl_V_0_vld_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ctrl_V_0_ack_out = ap_const_logic_1) and (ap_const_logic_1 = ap_const_logic_1) and (ctrl_V_0_vld_reg = ap_const_logic_1)))) then
                ctrl_V_0_data_reg <= ctrl_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ctrl_V_read_reg_2321 <= ctrl_V_0_data_reg;
                empty_n_1_reg_2311_pp0_iter1_reg <= empty_n_1_reg_2311;
                empty_n_reg_2301 <= (0=>xStream_V_V_TVALID, others=>'-');
                empty_n_reg_2301_pp0_iter1_reg <= empty_n_reg_2301;
                tmp_3_reg_2327 <= tmp_3_fu_597_p1;
                tmp_V_reg_2305 <= xStream_V_V_TDATA;
                tmp_V_reg_2305_pp0_iter1_reg <= tmp_V_reg_2305;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ctrl_V_read_reg_2321_pp0_iter2_reg <= ctrl_V_read_reg_2321;
                currentStoreSliceIdx_1_reg_2341 <= currentStoreSliceIdx;
                glDVSSlice_V_0_addr_1_reg_2345 <= tmp_63_cast_fu_669_p1(12 - 1 downto 0);
                glDVSSlice_V_1_addr_reg_2351 <= tmp_63_cast_fu_669_p1(12 - 1 downto 0);
                hCntReg_V_load_3_reg_436_pp0_iter4_reg <= hCntReg_V_load_3_reg_436;
                hCntReg_V_load_reg_2357 <= hCntReg_V;
                p_0683_1_reg_381_pp0_iter4_reg <= p_0683_1_reg_381;
                r_V_reg_2331 <= r_V_fu_2295_p2;
                tmp_3_reg_2327_pp0_iter2_reg <= tmp_3_reg_2327;
                tmp_71_reg_2399 <= tmp_71_fu_802_p2;
                tmp_71_reg_2399_pp0_iter4_reg <= tmp_71_reg_2399;
                tmp_76_reg_2403 <= tmp_76_fu_825_p2;
                tmp_76_reg_2403_pp0_iter4_reg <= tmp_76_reg_2403;
                tmp_V_reg_2305_pp0_iter2_reg <= tmp_V_reg_2305_pp0_iter1_reg;
                tmp_V_reg_2305_pp0_iter3_reg <= tmp_V_reg_2305_pp0_iter2_reg;
                tmp_V_reg_2305_pp0_iter4_reg <= tmp_V_reg_2305_pp0_iter3_reg;
                vCntReg_V_load_3_reg_449_pp0_iter4_reg <= vCntReg_V_load_3_reg_449;
                vgaOutputEn_load_reg_2387 <= vgaOutputEn;
                vgaOutputEn_load_reg_2387_pp0_iter4_reg <= vgaOutputEn_load_reg_2387;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_71_fu_802_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                currentStoreSliceIdx <= p_s_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_n_fu_581_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_n_1_reg_2311 <= (0=>yStream_V_V_TVALID, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_phi_mux_val_assign_2_phi_fu_522_p4 = ap_const_lv1_0))) then
                evCntReg_V <= tmp_77_fu_2204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_data_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_data_V_1_payload_A <= rgbStreamData_data_V_fu_2183_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_data_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_data_V_1_payload_B <= rgbStreamData_data_V_fu_2183_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_last_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_last_V_1_payload_A <= tmp_last_V_fu_2177_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_last_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_last_V_1_payload_B <= tmp_last_V_fu_2177_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_user_V_1_load_A = ap_const_logic_1)) then
                frameStream_V_user_V_1_payload_A <= tmp_user_V_fu_2192_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((frameStream_V_user_V_1_load_B = ap_const_logic_1)) then
                frameStream_V_user_V_1_payload_B <= tmp_user_V_fu_2192_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_1))) then
                glDVSSlice_V_0_addr_reg_2376 <= tmp_93_cast_fu_729_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_0))) then
                glDVSSlice_V_1_addr_1_reg_2365 <= tmp_96_cast_fu_706_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_hCntReg_V_flag_phi_fu_411_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                hCntReg_V <= ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_fu_597_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sliceDurationMs_V <= configRegs_V_0_data_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_71_reg_2399_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                startX_V <= p_tmp_s_fu_2232_p3;
                startY_V <= storemerge1_fu_2262_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                tmp_22_reg_2382 <= grp_fu_571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_0))) then
                tmp_33_reg_2371 <= grp_fu_571_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1))) then
                tmp_65_reg_2391 <= tmp_65_fu_745_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_vCntReg_V_flag_phi_fu_396_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                vCntReg_V <= ap_phi_mux_vCntReg_V_load_3_phi_fu_452_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_vgaOutputEn_flag_1_phi_fu_477_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                vgaOutputEn <= ap_phi_mux_vgaOutputEn_new_1_phi_fu_489_p4;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter5, frameStream_V_data_V_1_ack_in, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0))) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, frameStream_V_data_V_1_ack_in, ap_block_state5_io, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6_io))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, frameStream_V_data_V_1_ack_in, ap_block_state5_io, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in, ap_block_state6_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state6_io))) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_io)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(frameStream_V_data_V_1_ack_in, vgaOutputEn_load_reg_2387)
    begin
                ap_block_state5_io <= ((vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_io_assign_proc : process(frameStream_V_data_V_1_ack_in, vgaOutputEn_load_reg_2387_pp0_iter4_reg)
    begin
                ap_block_state6_io <= ((vgaOutputEn_load_reg_2387_pp0_iter4_reg = ap_const_lv1_1) and (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage0_iter5_assign_proc : process(frameStream_V_data_V_1_ack_in, frameStream_V_keep_V_1_ack_in, frameStream_V_strb_V_1_ack_in, frameStream_V_user_V_1_ack_in, frameStream_V_last_V_1_ack_in, frameStream_V_id_V_1_ack_in, frameStream_V_dest_V_1_ack_in)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((frameStream_V_dest_V_1_ack_in = ap_const_logic_0) or (frameStream_V_id_V_1_ack_in = ap_const_logic_0) or (frameStream_V_last_V_1_ack_in = ap_const_logic_0) or (frameStream_V_user_V_1_ack_in = ap_const_logic_0) or (frameStream_V_strb_V_1_ack_in = ap_const_logic_0) or (frameStream_V_keep_V_1_ack_in = ap_const_logic_0) or (frameStream_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_102_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_102 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_778_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_778 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_hCntReg_V_flag_phi_fu_411_p6_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_734_p1, tmp_67_fu_758_p2, ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_408)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0))) then 
            ap_phi_mux_hCntReg_V_flag_phi_fu_411_p6 <= ap_const_lv1_0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_hCntReg_V_flag_phi_fu_411_p6 <= ap_const_lv1_1;
        else 
            ap_phi_mux_hCntReg_V_flag_phi_fu_411_p6 <= ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_408;
        end if; 
    end process;


    ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6_assign_proc : process(ap_enable_reg_pp0_iter3, hCntReg_V, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_734_p1, tmp_67_fu_758_p2, tmp_66_fu_751_p2, ap_phi_reg_pp0_iter3_hCntReg_V_load_3_reg_436)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if (((tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1))) then 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6 <= ap_const_lv12_0;
            elsif ((vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6 <= hCntReg_V;
            elsif (((vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6 <= tmp_66_fu_751_p2;
            else 
                ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6 <= ap_phi_reg_pp0_iter3_hCntReg_V_load_3_reg_436;
            end if;
        else 
            ap_phi_mux_hCntReg_V_load_3_phi_fu_439_p6 <= ap_phi_reg_pp0_iter3_hCntReg_V_load_3_reg_436;
        end if; 
    end process;


    ap_phi_mux_p_0641_2_phi_fu_534_p4_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2341, p_2_fu_1402_p3, ap_phi_reg_pp0_iter4_p_0641_2_reg_531, p_0641_1_fu_2051_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1)) then 
                ap_phi_mux_p_0641_2_phi_fu_534_p4 <= p_0641_1_fu_2051_p3;
            elsif ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)) then 
                ap_phi_mux_p_0641_2_phi_fu_534_p4 <= p_2_fu_1402_p3;
            else 
                ap_phi_mux_p_0641_2_phi_fu_534_p4 <= ap_phi_reg_pp0_iter4_p_0641_2_reg_531;
            end if;
        else 
            ap_phi_mux_p_0641_2_phi_fu_534_p4 <= ap_phi_reg_pp0_iter4_p_0641_2_reg_531;
        end if; 
    end process;


    ap_phi_mux_t_V_2_phi_fu_500_p4_assign_proc : process(ap_enable_reg_pp0_iter3, cntReg_V, ap_block_pp0_stage0, tmp_71_fu_802_p2, ap_phi_reg_pp0_iter3_t_V_2_reg_497)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((tmp_71_fu_802_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_t_V_2_phi_fu_500_p4 <= cntReg_V;
            elsif ((tmp_71_fu_802_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_t_V_2_phi_fu_500_p4 <= ap_const_lv32_0;
            else 
                ap_phi_mux_t_V_2_phi_fu_500_p4 <= ap_phi_reg_pp0_iter3_t_V_2_reg_497;
            end if;
        else 
            ap_phi_mux_t_V_2_phi_fu_500_p4 <= ap_phi_reg_pp0_iter3_t_V_2_reg_497;
        end if; 
    end process;


    ap_phi_mux_vCntReg_V_flag_phi_fu_396_p6_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_734_p1, ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_393, tmp_67_fu_758_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_vCntReg_V_flag_phi_fu_396_p6 <= ap_const_lv1_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vCntReg_V_flag_phi_fu_396_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_vCntReg_V_flag_phi_fu_396_p6 <= ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_393;
        end if; 
    end process;


    ap_phi_mux_vCntReg_V_load_3_phi_fu_452_p6_assign_proc : process(ap_enable_reg_pp0_iter3, vCntReg_V, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_734_p1, tmp_67_fu_758_p2, ap_phi_reg_pp0_iter3_vCntReg_V_load_3_reg_449, p_tmp_1_fu_777_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_vCntReg_V_load_3_phi_fu_452_p6 <= p_tmp_1_fu_777_p3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vCntReg_V_load_3_phi_fu_452_p6 <= vCntReg_V;
        else 
            ap_phi_mux_vCntReg_V_load_3_phi_fu_452_p6 <= ap_phi_reg_pp0_iter3_vCntReg_V_load_3_reg_449;
        end if; 
    end process;


    ap_phi_mux_val_assign_1_phi_fu_464_p6_assign_proc : process(ap_enable_reg_pp0_iter3, vgaOutputEn, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_734_p1, tmp_67_fu_758_p2, ap_phi_reg_pp0_iter3_val_assign_1_reg_461, not_tmp_s_fu_786_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if (((tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1))) then 
                ap_phi_mux_val_assign_1_phi_fu_464_p6 <= not_tmp_s_fu_786_p2;
            elsif ((vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_val_assign_1_phi_fu_464_p6 <= vgaOutputEn;
            elsif (((vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0))) then 
                ap_phi_mux_val_assign_1_phi_fu_464_p6 <= ap_const_lv1_1;
            else 
                ap_phi_mux_val_assign_1_phi_fu_464_p6 <= ap_phi_reg_pp0_iter3_val_assign_1_reg_461;
            end if;
        else 
            ap_phi_mux_val_assign_1_phi_fu_464_p6 <= ap_phi_reg_pp0_iter3_val_assign_1_reg_461;
        end if; 
    end process;

    ap_phi_mux_val_assign_2_phi_fu_522_p4 <= ap_phi_reg_pp0_iter4_val_assign_2_reg_516;

    ap_phi_mux_vgaOutputEn_flag_1_phi_fu_477_p4_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, tmp_71_fu_802_p2, ap_phi_mux_vgaOutputEn_flag_phi_fu_426_p6, ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_474)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((tmp_71_fu_802_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_477_p4 <= ap_phi_mux_vgaOutputEn_flag_phi_fu_426_p6;
            elsif ((tmp_71_fu_802_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_477_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_vgaOutputEn_flag_1_phi_fu_477_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_474;
            end if;
        else 
            ap_phi_mux_vgaOutputEn_flag_1_phi_fu_477_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_474;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_flag_phi_fu_426_p6_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, vgaOutputEn_load_load_fu_734_p1, tmp_67_fu_758_p2, ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_423, tmp_69_fu_770_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_67_fu_758_p2 = ap_const_lv1_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_426_p6 <= tmp_69_fu_770_p2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_load_fu_734_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (tmp_67_fu_758_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_426_p6 <= ap_const_lv1_0;
        else 
            ap_phi_mux_vgaOutputEn_flag_phi_fu_426_p6 <= ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_423;
        end if; 
    end process;


    ap_phi_mux_vgaOutputEn_new_1_phi_fu_489_p4_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, tmp_71_fu_802_p2, ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_486)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((tmp_71_fu_802_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_489_p4 <= ap_const_lv1_0;
            elsif ((tmp_71_fu_802_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_489_p4 <= ap_const_lv1_1;
            else 
                ap_phi_mux_vgaOutputEn_new_1_phi_fu_489_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_486;
            end if;
        else 
            ap_phi_mux_vgaOutputEn_new_1_phi_fu_489_p4 <= ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_486;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_ctrl_V_buf_reg_507 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_evCntReg_V_loc_reg_553 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0683_1_reg_381 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0683_s_reg_369 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_val_assign_2_reg_516 <= "X";
    ap_phi_reg_pp0_iter0_val_assign_reg_540 <= "X";
    ap_phi_reg_pp0_iter3_hCntReg_V_flag_reg_408 <= "X";
    ap_phi_reg_pp0_iter3_hCntReg_V_load_3_reg_436 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_t_V_2_reg_497 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_vCntReg_V_flag_reg_393 <= "X";
    ap_phi_reg_pp0_iter3_vCntReg_V_load_3_reg_449 <= "XXXXXXXXXXXX";
    ap_phi_reg_pp0_iter3_val_assign_1_reg_461 <= "X";
    ap_phi_reg_pp0_iter3_vgaOutputEn_flag_1_reg_474 <= "X";
    ap_phi_reg_pp0_iter3_vgaOutputEn_flag_reg_423 <= "X";
    ap_phi_reg_pp0_iter3_vgaOutputEn_new_1_reg_486 <= "X";
    ap_phi_reg_pp0_iter4_p_0641_2_reg_531 <= "XXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    configRegs_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            configRegs_V_0_ack_out <= ap_const_logic_1;
        else 
            configRegs_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    count_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_76_reg_2403_pp0_iter4_reg),64));

    count_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_count_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_count_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            count_V_ap_vld <= ap_const_logic_1;
        else 
            count_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    ctrl_V_0_ack_out_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ctrl_V_0_ack_out <= ap_const_logic_1;
        else 
            ctrl_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    currentEvCntReg_V <= ap_phi_reg_pp0_iter5_evCntReg_V_loc_reg_553(32 - 1 downto 0);

    currentEvCntReg_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_currentEvCntReg_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_currentEvCntReg_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            currentEvCntReg_V_ap_vld <= ap_const_logic_1;
        else 
            currentEvCntReg_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    currentStoreSliceIdx_1_load_fu_632_p1 <= currentStoreSliceIdx;
    empty_n_1_fu_589_p1 <= (0=>yStream_V_V_TVALID, others=>'-');
    empty_n_fu_581_p1 <= (0=>xStream_V_V_TVALID, others=>'-');
    frameStream_TDATA <= frameStream_V_data_V_1_data_out;

    frameStream_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, vgaOutputEn_load_reg_2387, vgaOutputEn_load_reg_2387_pp0_iter4_reg, frameStream_V_data_V_1_state, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_reg_2387_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then 
            frameStream_TDATA_blk_n <= frameStream_V_data_V_1_state(1);
        else 
            frameStream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    frameStream_TDEST <= frameStream_V_dest_V_1_data_out;
    frameStream_TID <= frameStream_V_id_V_1_data_out;
    frameStream_TKEEP <= frameStream_V_keep_V_1_data_out;
    frameStream_TLAST <= frameStream_V_last_V_1_data_out;
    frameStream_TSTRB <= frameStream_V_strb_V_1_data_out;
    frameStream_TUSER <= frameStream_V_user_V_1_data_out;
    frameStream_TVALID <= frameStream_V_dest_V_1_state(0);
    frameStream_V_data_V_1_ack_in <= frameStream_V_data_V_1_state(1);
    frameStream_V_data_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_data_V_1_data_out_assign_proc : process(frameStream_V_data_V_1_payload_A, frameStream_V_data_V_1_payload_B, frameStream_V_data_V_1_sel)
    begin
        if ((frameStream_V_data_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_data_V_1_data_out <= frameStream_V_data_V_1_payload_B;
        else 
            frameStream_V_data_V_1_data_out <= frameStream_V_data_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_data_V_1_load_A <= (frameStream_V_data_V_1_state_cmp_full and not(frameStream_V_data_V_1_sel_wr));
    frameStream_V_data_V_1_load_B <= (frameStream_V_data_V_1_state_cmp_full and frameStream_V_data_V_1_sel_wr);
    frameStream_V_data_V_1_sel <= frameStream_V_data_V_1_sel_rd;
    frameStream_V_data_V_1_state_cmp_full <= '0' when (frameStream_V_data_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter4, vgaOutputEn_load_reg_2387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frameStream_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_data_V_1_vld_out <= frameStream_V_data_V_1_state(0);
    frameStream_V_dest_V_1_ack_in <= frameStream_V_dest_V_1_state(1);
    frameStream_V_dest_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_dest_V_1_data_out <= ap_const_lv1_0;
    frameStream_V_dest_V_1_sel <= frameStream_V_dest_V_1_sel_rd;

    frameStream_V_dest_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter4, vgaOutputEn_load_reg_2387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frameStream_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_dest_V_1_vld_out <= frameStream_V_dest_V_1_state(0);
    frameStream_V_id_V_1_ack_in <= frameStream_V_id_V_1_state(1);
    frameStream_V_id_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_id_V_1_data_out <= ap_const_lv1_0;
    frameStream_V_id_V_1_sel <= frameStream_V_id_V_1_sel_rd;

    frameStream_V_id_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter4, vgaOutputEn_load_reg_2387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frameStream_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_id_V_1_vld_out <= frameStream_V_id_V_1_state(0);
    frameStream_V_keep_V_1_ack_in <= frameStream_V_keep_V_1_state(1);
    frameStream_V_keep_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_keep_V_1_data_out <= ap_const_lv3_7;
    frameStream_V_keep_V_1_sel <= frameStream_V_keep_V_1_sel_rd;

    frameStream_V_keep_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter4, vgaOutputEn_load_reg_2387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frameStream_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_keep_V_1_vld_out <= frameStream_V_keep_V_1_state(0);
    frameStream_V_last_V_1_ack_in <= frameStream_V_last_V_1_state(1);
    frameStream_V_last_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_last_V_1_data_out_assign_proc : process(frameStream_V_last_V_1_payload_A, frameStream_V_last_V_1_payload_B, frameStream_V_last_V_1_sel)
    begin
        if ((frameStream_V_last_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_last_V_1_data_out <= frameStream_V_last_V_1_payload_B;
        else 
            frameStream_V_last_V_1_data_out <= frameStream_V_last_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_last_V_1_load_A <= (frameStream_V_last_V_1_state_cmp_full and not(frameStream_V_last_V_1_sel_wr));
    frameStream_V_last_V_1_load_B <= (frameStream_V_last_V_1_state_cmp_full and frameStream_V_last_V_1_sel_wr);
    frameStream_V_last_V_1_sel <= frameStream_V_last_V_1_sel_rd;
    frameStream_V_last_V_1_state_cmp_full <= '0' when (frameStream_V_last_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter4, vgaOutputEn_load_reg_2387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frameStream_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_last_V_1_vld_out <= frameStream_V_last_V_1_state(0);
    frameStream_V_strb_V_1_ack_in <= frameStream_V_strb_V_1_state(1);
    frameStream_V_strb_V_1_ack_out <= frameStream_TREADY;
    frameStream_V_strb_V_1_data_out <= ap_const_lv3_7;
    frameStream_V_strb_V_1_sel <= frameStream_V_strb_V_1_sel_rd;

    frameStream_V_strb_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter4, vgaOutputEn_load_reg_2387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frameStream_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_strb_V_1_vld_out <= frameStream_V_strb_V_1_state(0);
    frameStream_V_user_V_1_ack_in <= frameStream_V_user_V_1_state(1);
    frameStream_V_user_V_1_ack_out <= frameStream_TREADY;

    frameStream_V_user_V_1_data_out_assign_proc : process(frameStream_V_user_V_1_payload_A, frameStream_V_user_V_1_payload_B, frameStream_V_user_V_1_sel)
    begin
        if ((frameStream_V_user_V_1_sel = ap_const_logic_1)) then 
            frameStream_V_user_V_1_data_out <= frameStream_V_user_V_1_payload_B;
        else 
            frameStream_V_user_V_1_data_out <= frameStream_V_user_V_1_payload_A;
        end if; 
    end process;

    frameStream_V_user_V_1_load_A <= (frameStream_V_user_V_1_state_cmp_full and not(frameStream_V_user_V_1_sel_wr));
    frameStream_V_user_V_1_load_B <= (frameStream_V_user_V_1_state_cmp_full and frameStream_V_user_V_1_sel_wr);
    frameStream_V_user_V_1_sel <= frameStream_V_user_V_1_sel_rd;
    frameStream_V_user_V_1_state_cmp_full <= '0' when (frameStream_V_user_V_1_state = ap_const_lv2_1) else '1';

    frameStream_V_user_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter4, vgaOutputEn_load_reg_2387, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (vgaOutputEn_load_reg_2387 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            frameStream_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            frameStream_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    frameStream_V_user_V_1_vld_out <= frameStream_V_user_V_1_state(0);

    glDVSSlice_V_0_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, currentStoreSliceIdx_1_load_fu_632_p1, tmp_63_cast_fu_669_p1, tmp_93_cast_fu_729_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_1)) then 
                glDVSSlice_V_0_address0 <= tmp_93_cast_fu_729_p1(12 - 1 downto 0);
            elsif ((currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_0)) then 
                glDVSSlice_V_0_address0 <= tmp_63_cast_fu_669_p1(12 - 1 downto 0);
            else 
                glDVSSlice_V_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_address1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2341, glDVSSlice_V_0_addr_1_reg_2345, glDVSSlice_V_0_addr_reg_2376)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1)) then 
                glDVSSlice_V_0_address1 <= glDVSSlice_V_0_addr_reg_2376;
            elsif ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)) then 
                glDVSSlice_V_0_address1 <= glDVSSlice_V_0_addr_1_reg_2345;
            else 
                glDVSSlice_V_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_load_fu_632_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_0)))) then 
            glDVSSlice_V_0_ce0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2341)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)))) then 
            glDVSSlice_V_0_ce1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_0_d1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2341, tmp_125_fu_1203_p4, tmp_100_fu_2130_p4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1)) then 
                glDVSSlice_V_0_d1 <= tmp_100_fu_2130_p4;
            elsif ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)) then 
                glDVSSlice_V_0_d1 <= tmp_125_fu_1203_p4;
            else 
                glDVSSlice_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_0_we1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2341)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)))) then 
            glDVSSlice_V_0_we1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_address0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, currentStoreSliceIdx_1_load_fu_632_p1, tmp_63_cast_fu_669_p1, tmp_96_cast_fu_706_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_1)) then 
                glDVSSlice_V_1_address0 <= tmp_63_cast_fu_669_p1(12 - 1 downto 0);
            elsif ((currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_0)) then 
                glDVSSlice_V_1_address0 <= tmp_96_cast_fu_706_p1(12 - 1 downto 0);
            else 
                glDVSSlice_V_1_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_address1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2341, glDVSSlice_V_1_addr_reg_2351, glDVSSlice_V_1_addr_1_reg_2365)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1)) then 
                glDVSSlice_V_1_address1 <= glDVSSlice_V_1_addr_reg_2351;
            elsif ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)) then 
                glDVSSlice_V_1_address1 <= glDVSSlice_V_1_addr_1_reg_2365;
            else 
                glDVSSlice_V_1_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_load_fu_632_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (currentStoreSliceIdx_1_load_fu_632_p1 = ap_const_lv1_0)))) then 
            glDVSSlice_V_1_ce0 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2341)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)))) then 
            glDVSSlice_V_1_ce1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    glDVSSlice_V_1_d1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, currentStoreSliceIdx_1_reg_2341, tmp_143_fu_1481_p4, tmp_50_fu_1852_p4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
            if ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1)) then 
                glDVSSlice_V_1_d1 <= tmp_50_fu_1852_p4;
            elsif ((currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)) then 
                glDVSSlice_V_1_d1 <= tmp_143_fu_1481_p4;
            else 
                glDVSSlice_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            glDVSSlice_V_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    glDVSSlice_V_1_we1_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001, currentStoreSliceIdx_1_reg_2341)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (currentStoreSliceIdx_1_reg_2341 = ap_const_lv1_0)))) then 
            glDVSSlice_V_1_we1 <= ap_const_logic_1;
        else 
            glDVSSlice_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_562_p4 <= hCntReg_V(10 downto 6);
    grp_fu_571_p2 <= "1" when (unsigned(vCntReg_V) > unsigned(ap_const_lv12_103)) else "0";
    grp_fu_576_p2 <= "1" when (unsigned(hCntReg_V_load_reg_2357) > unsigned(ap_const_lv12_159)) else "0";
    hCnt_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(hCntReg_V_load_3_reg_436_pp0_iter4_reg),16));

    hCnt_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_hCnt_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_hCnt_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            hCnt_V_ap_vld <= ap_const_logic_1;
        else 
            hCnt_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    index_assign_10_1_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_61_fu_867_p3),32));
    index_assign_10_2_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_887_p3),32));
    index_assign_10_3_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_78_fu_907_p3),32));
    index_assign_10_4_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_79_fu_927_p3),32));
    index_assign_10_5_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_80_fu_947_p3),32));
    index_assign_10_6_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_967_p3),32));
    index_assign_10_7_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_82_fu_987_p3),32));
    index_assign_14_1_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_84_fu_1242_p3),32));
    index_assign_14_2_fu_1270_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_1262_p3),32));
    index_assign_14_3_fu_1290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_86_fu_1282_p3),32));
    index_assign_14_4_fu_1310_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_87_fu_1302_p3),32));
    index_assign_14_5_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_88_fu_1322_p3),32));
    index_assign_14_6_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_89_fu_1342_p3),32));
    index_assign_14_7_fu_1370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_90_fu_1362_p3),32));
    index_assign_18_1_fu_1524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1516_p3),32));
    index_assign_18_2_fu_1544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_1536_p3),32));
    index_assign_18_3_fu_1564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1556_p3),32));
    index_assign_18_4_fu_1584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1576_p3),32));
    index_assign_18_5_fu_1604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_1596_p3),32));
    index_assign_18_6_fu_1624_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1616_p3),32));
    index_assign_18_7_fu_1644_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_1636_p3),32));
    index_assign_1_fu_855_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_847_p3),32));
    index_assign_22_1_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_1891_p3),32));
    index_assign_22_2_fu_1919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_1911_p3),32));
    index_assign_22_3_fu_1939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_1931_p3),32));
    index_assign_22_4_fu_1959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_1951_p3),32));
    index_assign_22_5_fu_1979_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_1971_p3),32));
    index_assign_22_6_fu_1999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_1991_p3),32));
    index_assign_22_7_fu_2019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_2011_p3),32));
    index_assign_2_fu_1879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1871_p3),32));
    index_assign_3_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_83_fu_1222_p3),32));
    index_assign_s_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1496_p3),32));
    not_tmp_s_fu_786_p2 <= (tmp_69_fu_770_p2 xor ap_const_lv1_1);
    or_cond1_fu_1863_p2 <= (tmp_22_reg_2382 or grp_fu_576_p2);
    or_cond_fu_1214_p2 <= (tmp_33_reg_2371 or grp_fu_576_p2);
    p_0641_1_fu_2051_p3 <= 
        ap_const_lv8_66 when (or_cond1_fu_1863_p2(0) = '1') else 
        p_Result_77_7_fu_2031_p9;
    p_2_fu_1402_p3 <= 
        ap_const_lv8_66 when (or_cond_fu_1214_p2(0) = '1') else 
        p_Result_61_7_fu_1382_p9;
    p_Repl2_11_1_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_fu_1059_p3),64));
    p_Repl2_11_2_fu_1089_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_fu_1081_p3),64));
    p_Repl2_11_3_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_116_fu_1103_p3),64));
    p_Repl2_11_4_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_118_fu_1125_p3),64));
    p_Repl2_11_5_fu_1155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_120_fu_1147_p3),64));
    p_Repl2_11_6_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_122_fu_1169_p3),64));
    p_Repl2_11_7_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_124_fu_1191_p3),64));
    p_Repl2_8_1_fu_1716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_fu_1708_p3),64));
    p_Repl2_8_2_fu_1738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_1730_p3),64));
    p_Repl2_8_3_fu_1760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_1752_p3),64));
    p_Repl2_8_4_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_1774_p3),64));
    p_Repl2_8_5_fu_1804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_1796_p3),64));
    p_Repl2_8_6_fu_1826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_1818_p3),64));
    p_Repl2_8_7_fu_1848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_1840_p3),64));
    p_Repl2_8_fu_1694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_26_fu_1690_p1),64));
    p_Repl2_s_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_110_fu_1041_p1),64));
    p_Result_53_7_fu_1007_p9 <= (((((((tmp_109_fu_999_p3 & tmp_108_fu_979_p3) & tmp_107_fu_959_p3) & tmp_106_fu_939_p3) & tmp_105_fu_919_p3) & tmp_104_fu_899_p3) & tmp_103_fu_879_p3) & tmp_102_fu_859_p3);
    p_Result_61_7_fu_1382_p9 <= (((((((tmp_135_fu_1374_p3 & tmp_134_fu_1354_p3) & tmp_133_fu_1334_p3) & tmp_132_fu_1314_p3) & tmp_131_fu_1294_p3) & tmp_130_fu_1274_p3) & tmp_129_fu_1254_p3) & tmp_128_fu_1234_p3);
    p_Result_69_7_fu_1656_p9 <= (((((((tmp_25_fu_1648_p3 & tmp_24_fu_1628_p3) & tmp_21_fu_1608_p3) & tmp_19_fu_1588_p3) & tmp_18_fu_1568_p3) & tmp_16_fu_1548_p3) & tmp_13_fu_1528_p3) & tmp_11_fu_1508_p3);
    p_Result_77_7_fu_2031_p9 <= (((((((tmp_91_fu_2023_p3 & tmp_63_fu_2003_p3) & tmp_62_fu_1983_p3) & tmp_60_fu_1963_p3) & tmp_59_fu_1943_p3) & tmp_58_fu_1923_p3) & tmp_57_fu_1903_p3) & tmp_56_fu_1883_p3);
    p_s_fu_636_p2 <= (currentStoreSliceIdx xor ap_const_lv1_1);
    p_tmp_1_fu_777_p3 <= 
        ap_const_lv12_0 when (tmp_69_fu_770_p2(0) = '1') else 
        tmp_68_fu_764_p2;
    p_tmp_s_fu_2232_p3 <= 
        ap_const_lv16_0 when (tmp_72_fu_2220_p2(0) = '1') else 
        tmp_73_fu_2226_p2;
    pixVal_V_fu_2169_p3 <= 
        sf_fu_2161_p3 when (tmp_144_fu_2141_p3(0) = '1') else 
        st_fu_2153_p3;
    r_V_fu_2295_p0 <= r_V_fu_2295_p00(16 - 1 downto 0);
    r_V_fu_2295_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sliceDurationMs_V),34));
    r_V_fu_2295_p1 <= ap_const_lv34_186A0(18 - 1 downto 0);
    regX_V <= tmp_V_reg_2305_pp0_iter4_reg;

    regX_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_regX_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_regX_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            regX_V_ap_vld <= ap_const_logic_1;
        else 
            regX_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    regY_V <= p_0683_1_reg_381_pp0_iter4_reg;

    regY_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_regY_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_regY_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            regY_V_ap_vld <= ap_const_logic_1;
        else 
            regY_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rgbStreamData_data_V_fu_2183_p3 <= 
        ap_const_lv24_0 when (tmp_last_V_fu_2177_p2(0) = '1') else 
        pixVal_V_fu_2169_p3;
    sf_fu_2161_p3 <= (ap_phi_mux_p_0641_2_phi_fu_534_p4 & ap_const_lv16_0);
    skipFlgOutput_V <= val_assign_2_reg_516;

    skipFlgOutput_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_skipFlgOutput_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_skipFlgOutput_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            skipFlgOutput_V_ap_vld <= ap_const_logic_1;
        else 
            skipFlgOutput_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    st_fu_2153_p3 <= (tmp_145_fu_2149_p1 & ap_const_lv20_0);
    storemerge1_fu_2262_p3 <= 
        ap_const_lv16_0 when (tmp_74_fu_2250_p2(0) = '1') else 
        tmp_75_fu_2256_p2;
    tmpPixVal_V_2_fu_1682_p3 <= 
        p_Result_69_7_fu_1656_p9 when (ap_phi_reg_pp0_iter4_val_assign_2_reg_516(0) = '1') else 
        tmp_14_fu_1676_p2;
    tmpPixVal_V_fu_1033_p3 <= 
        p_Result_53_7_fu_1007_p9 when (ap_phi_reg_pp0_iter4_val_assign_2_reg_516(0) = '1') else 
        tmp_17_fu_1027_p2;
    
    tmp_100_fu_2130_p4_proc : process(tmp_99_fu_2120_p4, index_assign_22_7_fu_2019_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_100_fu_2130_p4 <= tmp_99_fu_2120_p4;
        if to_integer(unsigned(index_assign_22_7_fu_2019_p1)) >= tmp_99_fu_2120_p4'low and to_integer(unsigned(index_assign_22_7_fu_2019_p1)) <= tmp_99_fu_2120_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_100_fu_2130_p4(to_integer(unsigned(index_assign_22_7_fu_2019_p1))) <= result(0);
        end if;
    end process;

    tmp_101_fu_843_p1 <= p_0683_1_reg_381(6 - 1 downto 0);
    tmp_102_fu_859_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_1_fu_855_p1)) downto to_integer(unsigned(index_assign_1_fu_855_p1))) when (to_integer(unsigned(index_assign_1_fu_855_p1))>= 0 and to_integer(unsigned(index_assign_1_fu_855_p1))<=511) else "-";
    tmp_103_fu_879_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_1_fu_875_p1)) downto to_integer(unsigned(index_assign_10_1_fu_875_p1))) when (to_integer(unsigned(index_assign_10_1_fu_875_p1))>= 0 and to_integer(unsigned(index_assign_10_1_fu_875_p1))<=511) else "-";
    tmp_104_fu_899_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_2_fu_895_p1)) downto to_integer(unsigned(index_assign_10_2_fu_895_p1))) when (to_integer(unsigned(index_assign_10_2_fu_895_p1))>= 0 and to_integer(unsigned(index_assign_10_2_fu_895_p1))<=511) else "-";
    tmp_105_fu_919_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_3_fu_915_p1)) downto to_integer(unsigned(index_assign_10_3_fu_915_p1))) when (to_integer(unsigned(index_assign_10_3_fu_915_p1))>= 0 and to_integer(unsigned(index_assign_10_3_fu_915_p1))<=511) else "-";
    tmp_106_fu_939_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_4_fu_935_p1)) downto to_integer(unsigned(index_assign_10_4_fu_935_p1))) when (to_integer(unsigned(index_assign_10_4_fu_935_p1))>= 0 and to_integer(unsigned(index_assign_10_4_fu_935_p1))<=511) else "-";
    tmp_107_fu_959_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_5_fu_955_p1)) downto to_integer(unsigned(index_assign_10_5_fu_955_p1))) when (to_integer(unsigned(index_assign_10_5_fu_955_p1))>= 0 and to_integer(unsigned(index_assign_10_5_fu_955_p1))<=511) else "-";
    tmp_108_fu_979_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_6_fu_975_p1)) downto to_integer(unsigned(index_assign_10_6_fu_975_p1))) when (to_integer(unsigned(index_assign_10_6_fu_975_p1))>= 0 and to_integer(unsigned(index_assign_10_6_fu_975_p1))<=511) else "-";
    tmp_109_fu_999_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_10_7_fu_995_p1)) downto to_integer(unsigned(index_assign_10_7_fu_995_p1))) when (to_integer(unsigned(index_assign_10_7_fu_995_p1))>= 0 and to_integer(unsigned(index_assign_10_7_fu_995_p1))<=511) else "-";
    tmp_10_fu_1576_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_4);
    tmp_110_fu_1041_p1 <= tmpPixVal_V_fu_1033_p3(1 - 1 downto 0);
    
    tmp_111_fu_1049_p4_proc : process(glDVSSlice_V_0_q0, index_assign_1_fu_855_p1, p_Repl2_s_fu_1045_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_111_fu_1049_p4 <= glDVSSlice_V_0_q0;
        if to_integer(unsigned(index_assign_1_fu_855_p1)) >= glDVSSlice_V_0_q0'low and to_integer(unsigned(index_assign_1_fu_855_p1)) <= glDVSSlice_V_0_q0'high then
            result(0) := '0';
            for i in p_Repl2_s_fu_1045_p1'range loop
                result(0) := result(0) or p_Repl2_s_fu_1045_p1(i);
            end loop;
            tmp_111_fu_1049_p4(to_integer(unsigned(index_assign_1_fu_855_p1))) <= result(0);
        end if;
    end process;

    tmp_112_fu_1059_p3 <= tmpPixVal_V_fu_1033_p3(1 downto 1);
    
    tmp_113_fu_1071_p4_proc : process(tmp_111_fu_1049_p4, index_assign_10_1_fu_875_p1, p_Repl2_11_1_fu_1067_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_113_fu_1071_p4 <= tmp_111_fu_1049_p4;
        if to_integer(unsigned(index_assign_10_1_fu_875_p1)) >= tmp_111_fu_1049_p4'low and to_integer(unsigned(index_assign_10_1_fu_875_p1)) <= tmp_111_fu_1049_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_1_fu_1067_p1'range loop
                result(0) := result(0) or p_Repl2_11_1_fu_1067_p1(i);
            end loop;
            tmp_113_fu_1071_p4(to_integer(unsigned(index_assign_10_1_fu_875_p1))) <= result(0);
        end if;
    end process;

    tmp_114_fu_1081_p3 <= tmpPixVal_V_fu_1033_p3(2 downto 2);
    
    tmp_115_fu_1093_p4_proc : process(tmp_113_fu_1071_p4, index_assign_10_2_fu_895_p1, p_Repl2_11_2_fu_1089_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_115_fu_1093_p4 <= tmp_113_fu_1071_p4;
        if to_integer(unsigned(index_assign_10_2_fu_895_p1)) >= tmp_113_fu_1071_p4'low and to_integer(unsigned(index_assign_10_2_fu_895_p1)) <= tmp_113_fu_1071_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_2_fu_1089_p1'range loop
                result(0) := result(0) or p_Repl2_11_2_fu_1089_p1(i);
            end loop;
            tmp_115_fu_1093_p4(to_integer(unsigned(index_assign_10_2_fu_895_p1))) <= result(0);
        end if;
    end process;

    tmp_116_fu_1103_p3 <= tmpPixVal_V_fu_1033_p3(3 downto 3);
    
    tmp_117_fu_1115_p4_proc : process(tmp_115_fu_1093_p4, index_assign_10_3_fu_915_p1, p_Repl2_11_3_fu_1111_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_117_fu_1115_p4 <= tmp_115_fu_1093_p4;
        if to_integer(unsigned(index_assign_10_3_fu_915_p1)) >= tmp_115_fu_1093_p4'low and to_integer(unsigned(index_assign_10_3_fu_915_p1)) <= tmp_115_fu_1093_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_3_fu_1111_p1'range loop
                result(0) := result(0) or p_Repl2_11_3_fu_1111_p1(i);
            end loop;
            tmp_117_fu_1115_p4(to_integer(unsigned(index_assign_10_3_fu_915_p1))) <= result(0);
        end if;
    end process;

    tmp_118_fu_1125_p3 <= tmpPixVal_V_fu_1033_p3(4 downto 4);
    
    tmp_119_fu_1137_p4_proc : process(tmp_117_fu_1115_p4, index_assign_10_4_fu_935_p1, p_Repl2_11_4_fu_1133_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_119_fu_1137_p4 <= tmp_117_fu_1115_p4;
        if to_integer(unsigned(index_assign_10_4_fu_935_p1)) >= tmp_117_fu_1115_p4'low and to_integer(unsigned(index_assign_10_4_fu_935_p1)) <= tmp_117_fu_1115_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_4_fu_1133_p1'range loop
                result(0) := result(0) or p_Repl2_11_4_fu_1133_p1(i);
            end loop;
            tmp_119_fu_1137_p4(to_integer(unsigned(index_assign_10_4_fu_935_p1))) <= result(0);
        end if;
    end process;

    tmp_11_fu_1508_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_s_fu_1504_p1)) downto to_integer(unsigned(index_assign_s_fu_1504_p1))) when (to_integer(unsigned(index_assign_s_fu_1504_p1))>= 0 and to_integer(unsigned(index_assign_s_fu_1504_p1))<=511) else "-";
    tmp_120_fu_1147_p3 <= tmpPixVal_V_fu_1033_p3(5 downto 5);
    
    tmp_121_fu_1159_p4_proc : process(tmp_119_fu_1137_p4, index_assign_10_5_fu_955_p1, p_Repl2_11_5_fu_1155_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_121_fu_1159_p4 <= tmp_119_fu_1137_p4;
        if to_integer(unsigned(index_assign_10_5_fu_955_p1)) >= tmp_119_fu_1137_p4'low and to_integer(unsigned(index_assign_10_5_fu_955_p1)) <= tmp_119_fu_1137_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_5_fu_1155_p1'range loop
                result(0) := result(0) or p_Repl2_11_5_fu_1155_p1(i);
            end loop;
            tmp_121_fu_1159_p4(to_integer(unsigned(index_assign_10_5_fu_955_p1))) <= result(0);
        end if;
    end process;

    tmp_122_fu_1169_p3 <= tmpPixVal_V_fu_1033_p3(6 downto 6);
    
    tmp_123_fu_1181_p4_proc : process(tmp_121_fu_1159_p4, index_assign_10_6_fu_975_p1, p_Repl2_11_6_fu_1177_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_123_fu_1181_p4 <= tmp_121_fu_1159_p4;
        if to_integer(unsigned(index_assign_10_6_fu_975_p1)) >= tmp_121_fu_1159_p4'low and to_integer(unsigned(index_assign_10_6_fu_975_p1)) <= tmp_121_fu_1159_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_6_fu_1177_p1'range loop
                result(0) := result(0) or p_Repl2_11_6_fu_1177_p1(i);
            end loop;
            tmp_123_fu_1181_p4(to_integer(unsigned(index_assign_10_6_fu_975_p1))) <= result(0);
        end if;
    end process;

    tmp_124_fu_1191_p3 <= tmpPixVal_V_fu_1033_p3(7 downto 7);
    
    tmp_125_fu_1203_p4_proc : process(tmp_123_fu_1181_p4, index_assign_10_7_fu_995_p1, p_Repl2_11_7_fu_1199_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_125_fu_1203_p4 <= tmp_123_fu_1181_p4;
        if to_integer(unsigned(index_assign_10_7_fu_995_p1)) >= tmp_123_fu_1181_p4'low and to_integer(unsigned(index_assign_10_7_fu_995_p1)) <= tmp_123_fu_1181_p4'high then
            result(0) := '0';
            for i in p_Repl2_11_7_fu_1199_p1'range loop
                result(0) := result(0) or p_Repl2_11_7_fu_1199_p1(i);
            end loop;
            tmp_125_fu_1203_p4(to_integer(unsigned(index_assign_10_7_fu_995_p1))) <= result(0);
        end if;
    end process;

    tmp_127_fu_1219_p1 <= hCntReg_V_load_reg_2357(6 - 1 downto 0);
    tmp_128_fu_1234_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_3_fu_1230_p1)) downto to_integer(unsigned(index_assign_3_fu_1230_p1))) when (to_integer(unsigned(index_assign_3_fu_1230_p1))>= 0 and to_integer(unsigned(index_assign_3_fu_1230_p1))<=511) else "-";
    tmp_129_fu_1254_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_1_fu_1250_p1)) downto to_integer(unsigned(index_assign_14_1_fu_1250_p1))) when (to_integer(unsigned(index_assign_14_1_fu_1250_p1))>= 0 and to_integer(unsigned(index_assign_14_1_fu_1250_p1))<=511) else "-";
    tmp_12_fu_1596_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_5);
    tmp_130_fu_1274_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_2_fu_1270_p1)) downto to_integer(unsigned(index_assign_14_2_fu_1270_p1))) when (to_integer(unsigned(index_assign_14_2_fu_1270_p1))>= 0 and to_integer(unsigned(index_assign_14_2_fu_1270_p1))<=511) else "-";
    tmp_131_fu_1294_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_3_fu_1290_p1)) downto to_integer(unsigned(index_assign_14_3_fu_1290_p1))) when (to_integer(unsigned(index_assign_14_3_fu_1290_p1))>= 0 and to_integer(unsigned(index_assign_14_3_fu_1290_p1))<=511) else "-";
    tmp_132_fu_1314_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_4_fu_1310_p1)) downto to_integer(unsigned(index_assign_14_4_fu_1310_p1))) when (to_integer(unsigned(index_assign_14_4_fu_1310_p1))>= 0 and to_integer(unsigned(index_assign_14_4_fu_1310_p1))<=511) else "-";
    tmp_133_fu_1334_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_5_fu_1330_p1)) downto to_integer(unsigned(index_assign_14_5_fu_1330_p1))) when (to_integer(unsigned(index_assign_14_5_fu_1330_p1))>= 0 and to_integer(unsigned(index_assign_14_5_fu_1330_p1))<=511) else "-";
    tmp_134_fu_1354_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_6_fu_1350_p1)) downto to_integer(unsigned(index_assign_14_6_fu_1350_p1))) when (to_integer(unsigned(index_assign_14_6_fu_1350_p1))>= 0 and to_integer(unsigned(index_assign_14_6_fu_1350_p1))<=511) else "-";
    tmp_135_fu_1374_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_14_7_fu_1370_p1)) downto to_integer(unsigned(index_assign_14_7_fu_1370_p1))) when (to_integer(unsigned(index_assign_14_7_fu_1370_p1))>= 0 and to_integer(unsigned(index_assign_14_7_fu_1370_p1))<=511) else "-";
    
    tmp_136_fu_1411_p4_proc : process(glDVSSlice_V_1_q0, index_assign_3_fu_1230_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_136_fu_1411_p4 <= glDVSSlice_V_1_q0;
        if to_integer(unsigned(index_assign_3_fu_1230_p1)) >= glDVSSlice_V_1_q0'low and to_integer(unsigned(index_assign_3_fu_1230_p1)) <= glDVSSlice_V_1_q0'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_136_fu_1411_p4(to_integer(unsigned(index_assign_3_fu_1230_p1))) <= result(0);
        end if;
    end process;

    
    tmp_137_fu_1421_p4_proc : process(tmp_136_fu_1411_p4, index_assign_14_1_fu_1250_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_137_fu_1421_p4 <= tmp_136_fu_1411_p4;
        if to_integer(unsigned(index_assign_14_1_fu_1250_p1)) >= tmp_136_fu_1411_p4'low and to_integer(unsigned(index_assign_14_1_fu_1250_p1)) <= tmp_136_fu_1411_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_137_fu_1421_p4(to_integer(unsigned(index_assign_14_1_fu_1250_p1))) <= result(0);
        end if;
    end process;

    
    tmp_138_fu_1431_p4_proc : process(tmp_137_fu_1421_p4, index_assign_14_2_fu_1270_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_138_fu_1431_p4 <= tmp_137_fu_1421_p4;
        if to_integer(unsigned(index_assign_14_2_fu_1270_p1)) >= tmp_137_fu_1421_p4'low and to_integer(unsigned(index_assign_14_2_fu_1270_p1)) <= tmp_137_fu_1421_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_138_fu_1431_p4(to_integer(unsigned(index_assign_14_2_fu_1270_p1))) <= result(0);
        end if;
    end process;

    
    tmp_139_fu_1441_p4_proc : process(tmp_138_fu_1431_p4, index_assign_14_3_fu_1290_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_139_fu_1441_p4 <= tmp_138_fu_1431_p4;
        if to_integer(unsigned(index_assign_14_3_fu_1290_p1)) >= tmp_138_fu_1431_p4'low and to_integer(unsigned(index_assign_14_3_fu_1290_p1)) <= tmp_138_fu_1431_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_139_fu_1441_p4(to_integer(unsigned(index_assign_14_3_fu_1290_p1))) <= result(0);
        end if;
    end process;

    tmp_13_fu_1528_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_1_fu_1524_p1)) downto to_integer(unsigned(index_assign_18_1_fu_1524_p1))) when (to_integer(unsigned(index_assign_18_1_fu_1524_p1))>= 0 and to_integer(unsigned(index_assign_18_1_fu_1524_p1))<=511) else "-";
    
    tmp_140_fu_1451_p4_proc : process(tmp_139_fu_1441_p4, index_assign_14_4_fu_1310_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_140_fu_1451_p4 <= tmp_139_fu_1441_p4;
        if to_integer(unsigned(index_assign_14_4_fu_1310_p1)) >= tmp_139_fu_1441_p4'low and to_integer(unsigned(index_assign_14_4_fu_1310_p1)) <= tmp_139_fu_1441_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_140_fu_1451_p4(to_integer(unsigned(index_assign_14_4_fu_1310_p1))) <= result(0);
        end if;
    end process;

    
    tmp_141_fu_1461_p4_proc : process(tmp_140_fu_1451_p4, index_assign_14_5_fu_1330_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_141_fu_1461_p4 <= tmp_140_fu_1451_p4;
        if to_integer(unsigned(index_assign_14_5_fu_1330_p1)) >= tmp_140_fu_1451_p4'low and to_integer(unsigned(index_assign_14_5_fu_1330_p1)) <= tmp_140_fu_1451_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_141_fu_1461_p4(to_integer(unsigned(index_assign_14_5_fu_1330_p1))) <= result(0);
        end if;
    end process;

    
    tmp_142_fu_1471_p4_proc : process(tmp_141_fu_1461_p4, index_assign_14_6_fu_1350_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_142_fu_1471_p4 <= tmp_141_fu_1461_p4;
        if to_integer(unsigned(index_assign_14_6_fu_1350_p1)) >= tmp_141_fu_1461_p4'low and to_integer(unsigned(index_assign_14_6_fu_1350_p1)) <= tmp_141_fu_1461_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_142_fu_1471_p4(to_integer(unsigned(index_assign_14_6_fu_1350_p1))) <= result(0);
        end if;
    end process;

    
    tmp_143_fu_1481_p4_proc : process(tmp_142_fu_1471_p4, index_assign_14_7_fu_1370_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_143_fu_1481_p4 <= tmp_142_fu_1471_p4;
        if to_integer(unsigned(index_assign_14_7_fu_1370_p1)) >= tmp_142_fu_1471_p4'low and to_integer(unsigned(index_assign_14_7_fu_1370_p1)) <= tmp_142_fu_1471_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_143_fu_1481_p4(to_integer(unsigned(index_assign_14_7_fu_1370_p1))) <= result(0);
        end if;
    end process;

    tmp_144_fu_2141_p3 <= ap_phi_reg_pp0_iter4_ctrl_V_buf_reg_507(1 downto 1);
    tmp_145_fu_2149_p1 <= ap_phi_mux_p_0641_2_phi_fu_534_p4(4 - 1 downto 0);
    tmp_14_fu_1676_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(p_Result_69_7_fu_1656_p9));
    tmp_15_fu_1616_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_6);
    tmp_16_fu_1548_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_2_fu_1544_p1)) downto to_integer(unsigned(index_assign_18_2_fu_1544_p1))) when (to_integer(unsigned(index_assign_18_2_fu_1544_p1))>= 0 and to_integer(unsigned(index_assign_18_2_fu_1544_p1))<=511) else "-";
    tmp_17_fu_1027_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(p_Result_53_7_fu_1007_p9));
    tmp_18_fu_1568_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_3_fu_1564_p1)) downto to_integer(unsigned(index_assign_18_3_fu_1564_p1))) when (to_integer(unsigned(index_assign_18_3_fu_1564_p1))>= 0 and to_integer(unsigned(index_assign_18_3_fu_1564_p1))<=511) else "-";
    tmp_19_cast_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vCntReg_V),14));
    tmp_19_fu_1588_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_4_fu_1584_p1)) downto to_integer(unsigned(index_assign_18_4_fu_1584_p1))) when (to_integer(unsigned(index_assign_18_4_fu_1584_p1))>= 0 and to_integer(unsigned(index_assign_18_4_fu_1584_p1))<=511) else "-";
    tmp_1_fu_1516_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_1);
    tmp_20_fu_1636_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_7);
    tmp_21_fu_1608_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_5_fu_1604_p1)) downto to_integer(unsigned(index_assign_18_5_fu_1604_p1))) when (to_integer(unsigned(index_assign_18_5_fu_1604_p1))>= 0 and to_integer(unsigned(index_assign_18_5_fu_1604_p1))<=511) else "-";
    tmp_24_fu_1628_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_6_fu_1624_p1)) downto to_integer(unsigned(index_assign_18_6_fu_1624_p1))) when (to_integer(unsigned(index_assign_18_6_fu_1624_p1))>= 0 and to_integer(unsigned(index_assign_18_6_fu_1624_p1))<=511) else "-";
    tmp_25_fu_1648_p3 <= glDVSSlice_V_1_q0(to_integer(unsigned(index_assign_18_7_fu_1644_p1)) downto to_integer(unsigned(index_assign_18_7_fu_1644_p1))) when (to_integer(unsigned(index_assign_18_7_fu_1644_p1))>= 0 and to_integer(unsigned(index_assign_18_7_fu_1644_p1))<=511) else "-";
    tmp_26_fu_1690_p1 <= tmpPixVal_V_2_fu_1682_p3(1 - 1 downto 0);
    
    tmp_27_fu_1698_p4_proc : process(glDVSSlice_V_1_q0, index_assign_s_fu_1504_p1, p_Repl2_8_fu_1694_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_27_fu_1698_p4 <= glDVSSlice_V_1_q0;
        if to_integer(unsigned(index_assign_s_fu_1504_p1)) >= glDVSSlice_V_1_q0'low and to_integer(unsigned(index_assign_s_fu_1504_p1)) <= glDVSSlice_V_1_q0'high then
            result(0) := '0';
            for i in p_Repl2_8_fu_1694_p1'range loop
                result(0) := result(0) or p_Repl2_8_fu_1694_p1(i);
            end loop;
            tmp_27_fu_1698_p4(to_integer(unsigned(index_assign_s_fu_1504_p1))) <= result(0);
        end if;
    end process;

    tmp_28_fu_1708_p3 <= tmpPixVal_V_2_fu_1682_p3(1 downto 1);
    tmp_29_cast_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vCntReg_V),14));
    
    tmp_29_fu_1720_p4_proc : process(tmp_27_fu_1698_p4, index_assign_18_1_fu_1524_p1, p_Repl2_8_1_fu_1716_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_29_fu_1720_p4 <= tmp_27_fu_1698_p4;
        if to_integer(unsigned(index_assign_18_1_fu_1524_p1)) >= tmp_27_fu_1698_p4'low and to_integer(unsigned(index_assign_18_1_fu_1524_p1)) <= tmp_27_fu_1698_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_1_fu_1716_p1'range loop
                result(0) := result(0) or p_Repl2_8_1_fu_1716_p1(i);
            end loop;
            tmp_29_fu_1720_p4(to_integer(unsigned(index_assign_18_1_fu_1524_p1))) <= result(0);
        end if;
    end process;

    tmp_2_fu_624_p3 <= (tmp_8_fu_615_p4 & ap_const_lv1_0);
    tmp_30_fu_1871_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_0);
    tmp_31_cast_fu_655_p3 <= (tmp_5_fu_645_p4 & ap_const_lv9_0);
    tmp_31_fu_1730_p3 <= tmpPixVal_V_2_fu_1682_p3(2 downto 2);
    
    tmp_32_fu_1742_p4_proc : process(tmp_29_fu_1720_p4, index_assign_18_2_fu_1544_p1, p_Repl2_8_2_fu_1738_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_32_fu_1742_p4 <= tmp_29_fu_1720_p4;
        if to_integer(unsigned(index_assign_18_2_fu_1544_p1)) >= tmp_29_fu_1720_p4'low and to_integer(unsigned(index_assign_18_2_fu_1544_p1)) <= tmp_29_fu_1720_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_2_fu_1738_p1'range loop
                result(0) := result(0) or p_Repl2_8_2_fu_1738_p1(i);
            end loop;
            tmp_32_fu_1742_p4(to_integer(unsigned(index_assign_18_2_fu_1544_p1))) <= result(0);
        end if;
    end process;

    tmp_34_fu_1752_p3 <= tmpPixVal_V_2_fu_1682_p3(3 downto 3);
    
    tmp_35_fu_1764_p4_proc : process(tmp_32_fu_1742_p4, index_assign_18_3_fu_1564_p1, p_Repl2_8_3_fu_1760_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_35_fu_1764_p4 <= tmp_32_fu_1742_p4;
        if to_integer(unsigned(index_assign_18_3_fu_1564_p1)) >= tmp_32_fu_1742_p4'low and to_integer(unsigned(index_assign_18_3_fu_1564_p1)) <= tmp_32_fu_1742_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_3_fu_1760_p1'range loop
                result(0) := result(0) or p_Repl2_8_3_fu_1760_p1(i);
            end loop;
            tmp_35_fu_1764_p4(to_integer(unsigned(index_assign_18_3_fu_1564_p1))) <= result(0);
        end if;
    end process;

    tmp_37_fu_1774_p3 <= tmpPixVal_V_2_fu_1682_p3(4 downto 4);
    tmp_38_fu_1891_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_1);
    
    tmp_39_fu_1786_p4_proc : process(tmp_35_fu_1764_p4, index_assign_18_4_fu_1584_p1, p_Repl2_8_4_fu_1782_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_39_fu_1786_p4 <= tmp_35_fu_1764_p4;
        if to_integer(unsigned(index_assign_18_4_fu_1584_p1)) >= tmp_35_fu_1764_p4'low and to_integer(unsigned(index_assign_18_4_fu_1584_p1)) <= tmp_35_fu_1764_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_4_fu_1782_p1'range loop
                result(0) := result(0) or p_Repl2_8_4_fu_1782_p1(i);
            end loop;
            tmp_39_fu_1786_p4(to_integer(unsigned(index_assign_18_4_fu_1584_p1))) <= result(0);
        end if;
    end process;

    tmp_3_fu_597_p1 <= ctrl_V_0_data_reg(1 - 1 downto 0);
    tmp_40_fu_1911_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_2);
    tmp_41_fu_1796_p3 <= tmpPixVal_V_2_fu_1682_p3(5 downto 5);
    tmp_42_fu_1931_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_3);
    
    tmp_43_fu_1808_p4_proc : process(tmp_39_fu_1786_p4, index_assign_18_5_fu_1604_p1, p_Repl2_8_5_fu_1804_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_43_fu_1808_p4 <= tmp_39_fu_1786_p4;
        if to_integer(unsigned(index_assign_18_5_fu_1604_p1)) >= tmp_39_fu_1786_p4'low and to_integer(unsigned(index_assign_18_5_fu_1604_p1)) <= tmp_39_fu_1786_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_5_fu_1804_p1'range loop
                result(0) := result(0) or p_Repl2_8_5_fu_1804_p1(i);
            end loop;
            tmp_43_fu_1808_p4(to_integer(unsigned(index_assign_18_5_fu_1604_p1))) <= result(0);
        end if;
    end process;

    tmp_44_fu_1951_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_4);
    tmp_45_fu_1818_p3 <= tmpPixVal_V_2_fu_1682_p3(6 downto 6);
    
    tmp_46_fu_1830_p4_proc : process(tmp_43_fu_1808_p4, index_assign_18_6_fu_1624_p1, p_Repl2_8_6_fu_1826_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_46_fu_1830_p4 <= tmp_43_fu_1808_p4;
        if to_integer(unsigned(index_assign_18_6_fu_1624_p1)) >= tmp_43_fu_1808_p4'low and to_integer(unsigned(index_assign_18_6_fu_1624_p1)) <= tmp_43_fu_1808_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_6_fu_1826_p1'range loop
                result(0) := result(0) or p_Repl2_8_6_fu_1826_p1(i);
            end loop;
            tmp_46_fu_1830_p4(to_integer(unsigned(index_assign_18_6_fu_1624_p1))) <= result(0);
        end if;
    end process;

    tmp_47_fu_1840_p3 <= tmpPixVal_V_2_fu_1682_p3(7 downto 7);
    tmp_48_fu_1971_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_5);
    tmp_49_fu_1991_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_6);
    tmp_4_fu_642_p1 <= tmp_V_reg_2305_pp0_iter2_reg(14 - 1 downto 0);
    
    tmp_50_fu_1852_p4_proc : process(tmp_46_fu_1830_p4, index_assign_18_7_fu_1644_p1, p_Repl2_8_7_fu_1848_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_50_fu_1852_p4 <= tmp_46_fu_1830_p4;
        if to_integer(unsigned(index_assign_18_7_fu_1644_p1)) >= tmp_46_fu_1830_p4'low and to_integer(unsigned(index_assign_18_7_fu_1644_p1)) <= tmp_46_fu_1830_p4'high then
            result(0) := '0';
            for i in p_Repl2_8_7_fu_1848_p1'range loop
                result(0) := result(0) or p_Repl2_8_7_fu_1848_p1(i);
            end loop;
            tmp_50_fu_1852_p4(to_integer(unsigned(index_assign_18_7_fu_1644_p1))) <= result(0);
        end if;
    end process;

    tmp_51_fu_2011_p3 <= (tmp_55_fu_1868_p1 & ap_const_lv3_7);
    tmp_52_fu_847_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_0);
    tmp_54_fu_723_p2 <= std_logic_vector(unsigned(tmp_19_cast_fu_711_p1) + unsigned(tmp_92_cast_fu_715_p3));
    tmp_55_fu_1868_p1 <= hCntReg_V_load_reg_2357(6 - 1 downto 0);
    tmp_56_fu_1883_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_2_fu_1879_p1)) downto to_integer(unsigned(index_assign_2_fu_1879_p1))) when (to_integer(unsigned(index_assign_2_fu_1879_p1))>= 0 and to_integer(unsigned(index_assign_2_fu_1879_p1))<=511) else "-";
    tmp_57_fu_1903_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_1_fu_1899_p1)) downto to_integer(unsigned(index_assign_22_1_fu_1899_p1))) when (to_integer(unsigned(index_assign_22_1_fu_1899_p1))>= 0 and to_integer(unsigned(index_assign_22_1_fu_1899_p1))<=511) else "-";
    tmp_58_fu_1923_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_2_fu_1919_p1)) downto to_integer(unsigned(index_assign_22_2_fu_1919_p1))) when (to_integer(unsigned(index_assign_22_2_fu_1919_p1))>= 0 and to_integer(unsigned(index_assign_22_2_fu_1919_p1))<=511) else "-";
    tmp_59_fu_1943_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_3_fu_1939_p1)) downto to_integer(unsigned(index_assign_22_3_fu_1939_p1))) when (to_integer(unsigned(index_assign_22_3_fu_1939_p1))>= 0 and to_integer(unsigned(index_assign_22_3_fu_1939_p1))<=511) else "-";
    tmp_5_fu_645_p4 <= ap_phi_reg_pp0_iter3_p_0683_1_reg_381(10 downto 6);
    tmp_60_fu_1963_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_4_fu_1959_p1)) downto to_integer(unsigned(index_assign_22_4_fu_1959_p1))) when (to_integer(unsigned(index_assign_22_4_fu_1959_p1))>= 0 and to_integer(unsigned(index_assign_22_4_fu_1959_p1))<=511) else "-";
    tmp_61_fu_867_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_1);
    tmp_62_fu_1983_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_5_fu_1979_p1)) downto to_integer(unsigned(index_assign_22_5_fu_1979_p1))) when (to_integer(unsigned(index_assign_22_5_fu_1979_p1))>= 0 and to_integer(unsigned(index_assign_22_5_fu_1979_p1))<=511) else "-";
    tmp_63_cast_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_663_p2),64));
    tmp_63_fu_2003_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_6_fu_1999_p1)) downto to_integer(unsigned(index_assign_22_6_fu_1999_p1))) when (to_integer(unsigned(index_assign_22_6_fu_1999_p1))>= 0 and to_integer(unsigned(index_assign_22_6_fu_1999_p1))<=511) else "-";
    tmp_64_fu_739_p2 <= (vCntReg_V or hCntReg_V);
    tmp_65_fu_745_p2 <= "1" when (tmp_64_fu_739_p2 = ap_const_lv12_0) else "0";
    tmp_66_fu_751_p2 <= std_logic_vector(unsigned(ap_const_lv12_1) + unsigned(hCntReg_V));
    tmp_67_fu_758_p2 <= "1" when (tmp_66_fu_751_p2 = ap_const_lv12_320) else "0";
    tmp_68_fu_764_p2 <= std_logic_vector(unsigned(vCntReg_V) + unsigned(ap_const_lv12_1));
    tmp_69_fu_770_p2 <= "1" when (tmp_68_fu_764_p2 = ap_const_lv12_258) else "0";
    tmp_6_fu_1536_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_2);
    tmp_70_cast_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cntReg_V),34));
    tmp_70_fu_887_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_2);
    tmp_71_fu_802_p2 <= "1" when (tmp_70_cast_fu_798_p1 = r_V_reg_2331) else "0";
    tmp_72_fu_2220_p2 <= "1" when (unsigned(startX_V) > unsigned(ap_const_lv16_12B)) else "0";
    tmp_73_fu_2226_p2 <= std_logic_vector(unsigned(startX_V) + unsigned(ap_const_lv16_1));
    tmp_74_fu_2250_p2 <= "1" when (unsigned(startY_V) > unsigned(ap_const_lv16_C7)) else "0";
    tmp_75_fu_2256_p2 <= std_logic_vector(unsigned(startY_V) + unsigned(ap_const_lv16_1));
    tmp_76_fu_825_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_2_phi_fu_500_p4) + unsigned(ap_const_lv32_1));
    tmp_77_fu_2204_p2 <= std_logic_vector(unsigned(evCntReg_V) + unsigned(ap_const_lv64_1));
    tmp_78_fu_907_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_3);
    tmp_79_fu_927_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_4);
    tmp_7_fu_1492_p1 <= p_0683_1_reg_381(6 - 1 downto 0);
    tmp_80_fu_947_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_5);
    tmp_81_fu_967_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_6);
    tmp_82_fu_987_p3 <= (tmp_101_fu_843_p1 & ap_const_lv3_7);
    tmp_83_fu_1222_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_0);
    tmp_84_fu_1242_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_1);
    tmp_85_fu_1262_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_2);
    tmp_86_fu_1282_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_3);
    tmp_87_fu_1302_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_4);
    tmp_88_fu_1322_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_5);
    tmp_89_fu_1342_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_6);
    tmp_8_fu_615_p4 <= ctrl_V_read_reg_2321_pp0_iter2_reg(31 downto 1);
    tmp_90_fu_1362_p3 <= (tmp_127_fu_1219_p1 & ap_const_lv3_7);
    tmp_91_fu_2023_p3 <= glDVSSlice_V_0_q0(to_integer(unsigned(index_assign_22_7_fu_2019_p1)) downto to_integer(unsigned(index_assign_22_7_fu_2019_p1))) when (to_integer(unsigned(index_assign_22_7_fu_2019_p1))>= 0 and to_integer(unsigned(index_assign_22_7_fu_2019_p1))<=511) else "-";
    tmp_92_cast_fu_715_p3 <= (grp_fu_562_p4 & ap_const_lv9_0);
    
    tmp_92_fu_2060_p4_proc : process(glDVSSlice_V_0_q0, index_assign_2_fu_1879_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_92_fu_2060_p4 <= glDVSSlice_V_0_q0;
        if to_integer(unsigned(index_assign_2_fu_1879_p1)) >= glDVSSlice_V_0_q0'low and to_integer(unsigned(index_assign_2_fu_1879_p1)) <= glDVSSlice_V_0_q0'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_92_fu_2060_p4(to_integer(unsigned(index_assign_2_fu_1879_p1))) <= result(0);
        end if;
    end process;

    tmp_93_cast_fu_729_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_54_fu_723_p2),64));
    
    tmp_93_fu_2070_p4_proc : process(tmp_92_fu_2060_p4, index_assign_22_1_fu_1899_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_93_fu_2070_p4 <= tmp_92_fu_2060_p4;
        if to_integer(unsigned(index_assign_22_1_fu_1899_p1)) >= tmp_92_fu_2060_p4'low and to_integer(unsigned(index_assign_22_1_fu_1899_p1)) <= tmp_92_fu_2060_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_93_fu_2070_p4(to_integer(unsigned(index_assign_22_1_fu_1899_p1))) <= result(0);
        end if;
    end process;

    
    tmp_94_fu_2080_p4_proc : process(tmp_93_fu_2070_p4, index_assign_22_2_fu_1919_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_94_fu_2080_p4 <= tmp_93_fu_2070_p4;
        if to_integer(unsigned(index_assign_22_2_fu_1919_p1)) >= tmp_93_fu_2070_p4'low and to_integer(unsigned(index_assign_22_2_fu_1919_p1)) <= tmp_93_fu_2070_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_94_fu_2080_p4(to_integer(unsigned(index_assign_22_2_fu_1919_p1))) <= result(0);
        end if;
    end process;

    tmp_95_cast_fu_692_p3 <= (grp_fu_562_p4 & ap_const_lv9_0);
    
    tmp_95_fu_2090_p4_proc : process(tmp_94_fu_2080_p4, index_assign_22_3_fu_1939_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_95_fu_2090_p4 <= tmp_94_fu_2080_p4;
        if to_integer(unsigned(index_assign_22_3_fu_1939_p1)) >= tmp_94_fu_2080_p4'low and to_integer(unsigned(index_assign_22_3_fu_1939_p1)) <= tmp_94_fu_2080_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_95_fu_2090_p4(to_integer(unsigned(index_assign_22_3_fu_1939_p1))) <= result(0);
        end if;
    end process;

    tmp_96_cast_fu_706_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_96_fu_700_p2),64));
    tmp_96_fu_700_p2 <= std_logic_vector(unsigned(tmp_29_cast_fu_688_p1) + unsigned(tmp_95_cast_fu_692_p3));
    
    tmp_97_fu_2100_p4_proc : process(tmp_95_fu_2090_p4, index_assign_22_4_fu_1959_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_97_fu_2100_p4 <= tmp_95_fu_2090_p4;
        if to_integer(unsigned(index_assign_22_4_fu_1959_p1)) >= tmp_95_fu_2090_p4'low and to_integer(unsigned(index_assign_22_4_fu_1959_p1)) <= tmp_95_fu_2090_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_97_fu_2100_p4(to_integer(unsigned(index_assign_22_4_fu_1959_p1))) <= result(0);
        end if;
    end process;

    
    tmp_98_fu_2110_p4_proc : process(tmp_97_fu_2100_p4, index_assign_22_5_fu_1979_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_98_fu_2110_p4 <= tmp_97_fu_2100_p4;
        if to_integer(unsigned(index_assign_22_5_fu_1979_p1)) >= tmp_97_fu_2100_p4'low and to_integer(unsigned(index_assign_22_5_fu_1979_p1)) <= tmp_97_fu_2100_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_98_fu_2110_p4(to_integer(unsigned(index_assign_22_5_fu_1979_p1))) <= result(0);
        end if;
    end process;

    
    tmp_99_fu_2120_p4_proc : process(tmp_98_fu_2110_p4, index_assign_22_6_fu_1999_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        tmp_99_fu_2120_p4 <= tmp_98_fu_2110_p4;
        if to_integer(unsigned(index_assign_22_6_fu_1999_p1)) >= tmp_98_fu_2110_p4'low and to_integer(unsigned(index_assign_22_6_fu_1999_p1)) <= tmp_98_fu_2110_p4'high then
            result(0) := '0';
            for i in ap_const_lv64_0'range loop
                result(0) := result(0) or ap_const_lv64_0(i);
            end loop;
            tmp_99_fu_2120_p4(to_integer(unsigned(index_assign_22_6_fu_1999_p1))) <= result(0);
        end if;
    end process;

    tmp_9_fu_1556_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_3);
    tmp_fu_1496_p3 <= (tmp_7_fu_1492_p1 & ap_const_lv3_0);
    tmp_last_V_fu_2177_p2 <= "1" when (hCntReg_V_load_reg_2357 = ap_const_lv12_31F) else "0";
    tmp_s_fu_663_p2 <= std_logic_vector(unsigned(tmp_4_fu_642_p1) + unsigned(tmp_31_cast_fu_655_p3));
    tmp_user_V_fu_2192_p3 <= 
        ap_const_lv2_3 when (tmp_65_reg_2391(0) = '1') else 
        ap_const_lv2_0;
    vCnt_V <= std_logic_vector(IEEE.numeric_std.resize(unsigned(vCntReg_V_load_3_reg_449_pp0_iter4_reg),16));

    vCnt_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_vCnt_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_vCnt_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            vCnt_V_ap_vld <= ap_const_logic_1;
        else 
            vCnt_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    vgaEn_V <= ap_phi_reg_pp0_iter5_val_assign_reg_540;

    vgaEn_V_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_01001, ap_reg_ioackin_vgaEn_V_dummy_ack)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_vgaEn_V_dummy_ack = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            vgaEn_V_ap_vld <= ap_const_logic_1;
        else 
            vgaEn_V_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    vgaOutputEn_load_load_fu_734_p1 <= vgaOutputEn;

    xStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xStream_V_V_TREADY <= ap_const_logic_1;
        else 
            xStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    yStream_V_V_TREADY_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, empty_n_fu_581_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (empty_n_fu_581_p1 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            yStream_V_V_TREADY <= ap_const_logic_1;
        else 
            yStream_V_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;

end behav;
